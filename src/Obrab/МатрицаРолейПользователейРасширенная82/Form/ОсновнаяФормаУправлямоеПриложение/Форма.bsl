

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Василий Демидов aka Душелов

&НаКлиенте
Функция ПолучитьПолноеИмяФормы(ИмяФормы)
	
	СимволТочка = ".";
	ПозицияПоследнейТочки = СтрДлина(ЭтаФорма.ИмяФормы);
	Пока Сред(ЭтаФорма.ИмяФормы, ПозицияПоследнейТочки, 1) <> СимволТочка Цикл 
		ПозицияПоследнейТочки = ПозицияПоследнейТочки - 1;
	КонецЦикла; // 
	Возврат Лев(ЭтаФорма.ИмяФормы, ПозицияПоследнейТочки) + ИмяФормы;
	
КонецФункции

//Василий Демидов aka Душелов

&НаСервере
Функция ПолучитьМассивАктивныхПользователей()
	
	МассивПользователей = Новый Массив;
	МассивСоединений = ПолучитьСоединенияИнформационнойБазы();
	НомерТекущегоСоединения = НомерСоединенияИнформационнойБазы();
	
	Для Каждого Соединение ИЗ МассивСоединений Цикл
		Если Соединение.Пользователь <> Неопределено Тогда
			Если Соединение.ИмяПриложения <> "Designer" И Соединение.НомерСоединения <> НомерТекущегоСоединения Тогда
				МассивПользователей.Добавить(Соединение.Пользователь.Имя);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат МассивПользователей;
	
КонецФункции
			
&НаСервере
Процедура ИзменитьРоль(Пользователь, Роль, ДобавитьРоль)
	
	Если ДобавитьРоль Тогда
		Пользователь.Роли.Добавить(Роль);
	Иначе
		Пользователь.Роли.Удалить(Роль);
	КонецЕсли; 
	Пользователь.Записать();
	
КонецПроцедуры

&НаСервере
Функция НазначитьРольСервер(ПользовательИмя, РольИмя, РольДоступна = Неопределено)
	
	Роль = Метаданные.Роли[РольИмя];
	Пользователь = ПользователиИнформационнойБазы.НайтиПоИмени(ПользовательИмя);
	Если Пользователь <> Неопределено Тогда
		Если РольДоступна Тогда
			Если Не Пользователь.Роли.Содержит(Роль) Тогда
				ИзменитьРоль(Пользователь, Роль, Истина);
			КонецЕсли;
		Иначе
			Если Пользователь.Роли.Содержит(Роль) Тогда
				ИзменитьРоль(Пользователь, Роль, Ложь);
			КонецЕсли;
		КонецЕсли;
		
		Возврат Пользователь.Роли.Содержит(Роль);
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции
            
&НаСервере
Функция НайтиПользователяСервер(КодПользователя, ИмяПользователя)
	
	НайденнаяСсылка = Справочники.Пользователи.НайтиПоКоду(КодПользователя);
	Если НайденнаяСсылка = Неопределено ИЛИ НайденнаяСсылка.Пустая() Тогда
		НайденнаяСсылка = Справочники.Пользователи.НайтиПоНаименованию(ИмяПользователя);
	КонецЕсли; 
	Возврат НайденнаяСсылка;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДляОбластиЯчеек(ТабличныйДокумент, РольДоступна)
	
	МассивАктивныхПользователей = ПолучитьМассивАктивныхПользователей();
	МассивПользователей = Новый Массив;
	РолиИзменены = Ложь;
	Для Каждого Область из ТабличныйДокумент.ВыделенныеОбласти Цикл
		Для Лево = Область.Лево по Область.Лево + (Область.Право - Область.Лево) Цикл
			Для Верх = Область.Верх по Область.Верх + (Область.Низ - Область.Верх) Цикл
				Ячейка = ТабличныйДокумент.Область(Верх, Лево);
				Если НазначитьРоль(Ячейка, РольДоступна, Ложь)  Тогда
					РолиИзменены = Истина;
					ПользовательИмя = Ячейка.Расшифровка.Пользователь;
					Если (МассивАктивныхПользователей.Найти(ПользовательИмя) <> Неопределено 
						И МассивПользователей.Найти(ПользовательИмя) = Неопределено) Тогда
						МассивПользователей.Добавить(ПользовательИмя);
					КонецЕсли;  
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если РолиИзменены Тогда
		ПоказатьОповещениеПользователя("Состав ролей пользователям", , "изменен", Элементы.Информация32.Картинка);
	КонецЕсли; 
	
	Если МассивПользователей.Количество() > 0 Тогда
		
		ТекстСообщенияОбИзменениях = НСтр("ru = 'Были изменены роли пользователей, которые в данный момент работают с ИБ %1 
							|Для них новые значения вступят в силу только после перезапуска их сеанса работы с программой'");
		СписокПользователей = "";
		Для Каждого Пользователь ИЗ МассивПользователей Цикл
			СписокПользователей = СписокПользователей + ?(СписокПользователей = "", "(", " ;") + Пользователь;
		КонецЦикла;
		СписокПользователей = СписокПользователей + ")";
		ТекстСообщенияОбИзменениях = СтрЗаменить(ТекстСообщенияОбИзменениях, "%1", СписокПользователей);
		ОчиститьСообщения();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщенияОбИзменениях;
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НазначитьРоль(Ячейка, РольДоступна = Неопределено, ПоказыватьОповещение = Истина)
	
	Если Ячейка.ТипОбласти <> ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
		Возврат Ложь;
	ИначеЕсли ТипЗнч(Ячейка.Расшифровка) <> Тип("Структура") Тогда
		Возврат Ложь;
	ИначеЕсли НЕ Ячейка.Расшифровка.Свойство("Роль") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если РольДоступна = Неопределено Тогда
		РольДоступна = Не Ячейка.Значение;
	КонецЕсли;
	
	ПользовательИмя = Ячейка.Расшифровка.Пользователь;
	РольИмя = Ячейка.Расшифровка.Роль;
	
	Ячейка.Значение = НазначитьРольСервер(ПользовательИмя, РольИмя, РольДоступна);
	Ячейка.ЦветФона = WebЦвета.ЗеленоЖелтый;
	
	Если ПоказыватьОповещение Тогда
		
		МассивАктивныхПользователей = ПолучитьМассивАктивныхПользователей();
		Если МассивАктивныхПользователей.Найти(ПользовательИмя) <> Неопределено Тогда
			ТекстСообщенияОбИзменениях = НСтр("ru = 'Пользователь %1 в настоящий момент работает в ИБ.
								|Для него новые значения вступят в силу только после перезапуска сеанса работы с программой'");
			ТекстСообщенияОбИзменениях = СтрЗаменить(ТекстСообщенияОбИзменениях, "%1", ПользовательИмя);
			ОчиститьСообщения();
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщенияОбИзменениях;
			Сообщение.Сообщить();
		КонецЕсли; 

		Если Ячейка.Значение Тогда
			ПоказатьОповещениеПользователя("Роль установлена", , ПользовательИмя, Элементы.Информация32.Картинка);
		Иначе 
			ПоказатьОповещениеПользователя("Роль снята", , ПользовательИмя, Элементы.Информация32.Картинка);
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ВыделитьТекущуюКолонку(ТабличныйДокумент, ЯчейкаЗаголовокКолонки)
	
	//Выделяем ячейки текущей колонки
	
	МассивОбластей = Новый Массив;
	Область = ТабличныйДокумент.Область(ЯчейкаЗаголовокКолонки.Низ + 1, ЯчейкаЗаголовокКолонки.Лево, ТабличныйДокумент.ВысотаТаблицы - 1);
	МассивОбластей.Добавить(Область);
	
	Элементы.ПолеТабличногоДокумента.УстановитьВыделенныеОбласти(МассивОбластей);
	
КонецПроцедуры

//Заполняет реквизит ТаблицуПользователей
//
//Параметры
//	Нет.
//
//
&НаСервере
Функция СформироватьТаблицуПользователей() 
	
	ТаблицаПользователейОбъект = РеквизитФормыВЗначение("ТаблицаПользователей");
	ТаблицаПользователейОбъект.Очистить();
	ТаблицаПользователейОбъект.Колонки.Очистить();
	ТаблицаПользователейОбъект.Колонки.Добавить("Пользователь");
	ТаблицаПользователейОбъект.Колонки.Добавить("Имя");
	ТаблицаПользователейОбъект.Колонки.Добавить("ПолноеИмя");
	
	Для Каждого Пользователь из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		НоваяСтрока = ТаблицаПользователейОбъект.Добавить();
		НоваяСтрока.Пользователь = Пользователь;
		НоваяСтрока.Имя = Пользователь.Имя;
		НоваяСтрока.ПолноеИмя = ?(ЗначениеЗаполнено(Пользователь.ПолноеИмя) И СокрЛП(Пользователь.ПолноеИмя) <> СокрЛП(Пользователь.Имя), "; " + Пользователь.ПолноеИмя, "");
	КонецЦикла;
	
	ТаблицаПользователейОбъект.Сортировать("Имя");
	ЗначениеВРеквизитФормы(ТаблицаПользователейОбъект, "ТаблицаПользователей");
	
	Возврат ТаблицаПользователейОбъект;
	
КонецФункции

//Формирует матрицу ролей - табличный документ
//
//Параметры
// ТабличныйДокумент - ТабличныйДокумент - возвращаемый табличный документ
//
//
&НаСервере
Процедура СформироватьТабличныйДокумент(ТабличныйДокумент = Неопределено, СписокРолей, ТаблицаПользователей)
	
	Если ТабличныйДокумент = Неопределено Тогда
		ТабличныйДокумент = Новый ТабличныйДокумент;
	Иначе
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.ВыделенныеОбласти.Очистить();
	КонецЕсли;  
	
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ЭтотОбъект.ПолучитьМакет("Макет");
	
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Шапка|ПервыйСтолбец"));
	ТабличныйДокумент.ФиксацияСлева = ТабличныйДокумент.ШиринаТаблицы;
	
	Для каждого Роль Из СписокРолей Цикл
		Область = Макет.ПолучитьОбласть("Шапка|Столбец");
		Область.Параметры.Роль = Роль.Значение;
		Область.Параметры.Заголовок = Новый Структура("Заголовок", Истина);
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;  
	
	ТабличныйДокумент.Присоединить(Макет.ПолучитьОбласть("Шапка|ПоследнийСтолбец"));
	ТабличныйДокумент.ФиксацияСверху = ТабличныйДокумент.ВысотаТаблицы;
	
	ИмяТекущегоПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	МассивАктивныхПользователей = ПолучитьМассивАктивныхПользователей();
	Для Каждого СтрокаТЗ из ТаблицаПользователей Цикл
		Пользователь = СтрокаТЗ.Пользователь;
		ИмяПользователя = СтрокаТЗ.Имя;
		
		Область = Макет.ПолучитьОбласть("Строка|ПервыйСтолбец");
		Область.Параметры.Пользователь = ИмяПользователя + СтрокаТЗ.ПолноеИмя;
		Если ЕстьСправочникПользователи Тогда
			Область.Параметры.ПользовательИмя = Новый Структура("ПользовательИмя", ИмяПользователя);
		КонецЕсли;
		ОбластьИмениПользователя = Область.Область(1,2);
		Если ИмяПользователя = ИмяТекущегоПользователя Тогда
			ОбластьИмениПользователя.ЦветФона = WindowsЦвета.Подсвеченный;
			ОбластьИмениПользователя.Шрифт = Новый Шрифт(,, Истина);
		ИначеЕсли МассивАктивныхПользователей.Найти(ИмяПользователя) <> Неопределено Тогда
			ОбластьИмениПользователя.ЦветФона = WebЦвета.БледноЗеленый;
		КонецЕсли; 
		
		ТабличныйДокумент.Вывести(Область);
		
		Для каждого Роль Из СписокРолей Цикл
			Область = Макет.ПолучитьОбласть("Строка|Столбец");
			Область.Параметры.РольДоступна = Пользователь.Роли.Содержит(Метаданные.Роли[Роль.Ключ]);
			Область.Параметры.ПользовательРоль = Новый Структура("Пользователь, Роль", ИмяПользователя, Роль.Ключ);
			ТабличныйДокумент.Присоединить(Область);
		КонецЦикла;
		
		ТабличныйДокумент.Присоединить(Макет.ПолучитьОбласть("Строка|ПоследнийСтолбец"));
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Подвал|ПервыйСтолбец"));
	Для каждого Роль Из СписокРолей Цикл
		Область = Макет.ПолучитьОбласть("Подвал|Столбец");
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;
	ТабличныйДокумент.Присоединить(Макет.ПолучитьОбласть("Подвал|ПоследнийСтолбец"));
	
	ТабличныйДокумент.ОбластьПечати = ТабличныйДокумент.Область(2, 1, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(2, , ТабличныйДокумент.ФиксацияСверху + 1);
	ТабличныйДокумент.ОтображатьСетку = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТабличныйДокументНаСервере()
	
	ТаблицаПользователейОбъект = СформироватьТаблицуПользователей();
	СформироватьТабличныйДокумент(ПолеТабличногоДокумента, СтруктураРолей, ТаблицаПользователейОбъект);
	
КонецПроцедуры

// Проверить права текущего пользователя на администрирование пользователей информационной базы.
//
&НаСервере
Функция ЕстьПраваНаАдминистрирование() 
	
	Возврат ПравоДоступа("Администрирование", Метаданные, ПользователиИнформационнойБазы.ТекущийПользователь());
	
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

//Процедура-обработчик события "ПриСозданииНаСервере" формы
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЕстьПраваНаАдминистрирование() Тогда
		Возврат;
	КонецЕсли; 
	
	//При открытии или инициализации проверяем переданный программно таблицу ролей для формирования
	//матрицы. 
	//Если таблица пустая, формируем её из метаданных конфигурации
	Если ТипЗнч(Параметры.СтруктураРолей) = Тип("Структура") И Параметры.СтруктураРолей.Количество() > 0 Тогда
		СтруктураРолей = Параметры.СтруктураРолей;
	Иначе
		СтруктураРолей = Новый Структура;
		Для каждого Роль Из Метаданные.Роли Цикл
			СтруктураРолей.Вставить(Роль.Имя, Роль.Синоним);
		КонецЦикла;
	КонецЕсли; 
	
	//Проверка наличия в конфигурации справочника Пользователи.
	ЕстьСправочникПользователи = Метаданные.Справочники.Найти("Пользователи") <> Неопределено;
	
	ОбновитьТабличныйДокументНаСервере();
	
КонецПроцедуры

//Процедура-обработчик события "ПриОткрытии" формы
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЕстьПраваНаАдминистрирование() Тогда
		Предупреждение(НСтр("ru = 'Для использования обработки необходимо иметь право доступа ""Администрирование""'"));
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

//Процедура-обработчик события "ОбработкаВыбора" формы
//
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Если ВыбранноеЗначение.Свойство("СтруктураРолей") Тогда
			СтруктураРолей = ВыбранноеЗначение.СтруктураРолей;
			ОбновитьТабличныйДокументНаСервере();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ОбработкаРасшифровки элемента ПолеТабличногоДокумента.
//
&НаКлиенте
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ТекущаяЯчейка = ПолеТабличногоДокумента.ВыделенныеОбласти[0];
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ТекущаяЯчейка.Расшифровка) = Тип("Структура") И ТекущаяЯчейка.Расшифровка.Свойство("Роль") Тогда
		//Кликнули по ячейке
		
		НазначитьРоль(ТекущаяЯчейка);
		
	ИначеЕсли ТипЗнч(ТекущаяЯчейка.Расшифровка) = Тип("Структура") И ТекущаяЯчейка.Расшифровка.Свойство("ПользовательИмя") Тогда
		//Кликнули по ячейке с именем пользователя
		
		//Ищем в справочнике и открываем форму элемента пользователя
		Если ЕстьСправочникПользователи Тогда
			КодПользователя = СокрЛП(ТекущаяЯчейка.Расшифровка.ПользовательИмя);
			ИмяПользователя = СокрЛП(Сред(ТекущаяЯчейка.Текст, Найти(ТекущаяЯчейка.Текст, ";") + 1));
			НайденнаяСсылка = НайтиПользователяСервер(КодПользователя, ИмяПользователя);
			Если НЕ (НайденнаяСсылка = Неопределено ИЛИ НайденнаяСсылка.Пустая()) Тогда
				ПараметрыФормы = Новый Структура("Ключ", НайденнаяСсылка);
				ОткрытьФорму("Справочник.Пользователи.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
			КонецЕсли; 
		КонецЕсли; 
		
	ИначеЕсли ТипЗнч(ТекущаяЯчейка.Расшифровка) = Тип("Структура") И ТекущаяЯчейка.Расшифровка.Свойство("Заголовок") Тогда	
		//Кликнули по заголовку колонки
		
		//Выделяем ячейки текущей колонки
		ВыделитьТекущуюКолонку(ПолеТабличногоДокумента, ТекущаяЯчейка);
		
	КонецЕсли;

КонецПроцедуры

/////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД 
// 

//Процедура-обработчик команды "СписокРолей"
//
&НаКлиенте
Процедура СписокРолей(Команда)
	
	ПараметрыФормы = Новый Структура("СтруктураРолей", СтруктураРолей);
	ОткрытьФормуМодально(ПолучитьПолноеИмяФормы("ФормаВыборРолейУправляемоеПриложение"), ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

//Процедура-обработчик команды "Установить"
//
&НаКлиенте
Процедура Установить(Команда)
	
	УстановитьДляОбластиЯчеек(ПолеТабличногоДокумента, Истина);
	
КонецПроцедуры

//Процедура-обработчик команды "Снять"
//
&НаКлиенте
Процедура Снять(Команда)
	
	УстановитьДляОбластиЯчеек(ПолеТабличногоДокумента, Ложь);
	
КонецПроцедуры

//Процедура-обработчик команды "Обновить"
//
&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьТабличныйДокументНаСервере();
	
КонецПроцедуры

//Процедура-обработчик команды "Проголосовать"
//
&НаКлиенте
Процедура Проголосовать(Команда)
	
	ЗапуститьПриложение("http://infostart.ru/public/85228/?rate=1");
	
КонецПроцедуры
