Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю

#Если Клиент ИЛИ ВнешнееСоединение Тогда
	
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	//RAV+
	ЗначенияНастроек = ТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ЭтотОбъект);  		
	ПроизвольныйПериод = Новый Структура("ДатаНачала, ДатаОкончания");
	ПроизвольныйПериод.Вставить("ДатаНачала", ?(ЗначенияНастроек = Неопределено,Дата(1,1,1),ЗначенияНастроек.СтандартныйПериод.ДатаНачала));
	ПроизвольныйПериод.Вставить("ДатаОкончания", ?(ЗначенияНастроек = Неопределено,Дата(3999,11,1),ЗначенияНастроек.СтандартныйПериод.ДатаОкончания));
		
	ТЗДанныхУЛТМиБУ = ТЗРаспределитьПропорционально(ПроизвольныйПериод.ДатаНачала, ПроизвольныйПериод.ДатаОкончания);

	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ВнешняяТЗ",ТЗДанныхУЛТМиБУ);
    //RAV-
	ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета,ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
		
КонецФункции


Функция ТЗРаспределитьПропорционально(НачалоПериода,КонецПериода)
	
	ТЗДанныхУЛТМ = ПолучитьДанныеУЛТМ(НачалоПериода,КонецПериода);	
	ТЗДанныхБУ = ПолучитьДанныеБУ(НачалоПериода,КонецПериода);
	
	//Теперь распределим, обходя циклом каждый УЛТМ из данных БУ
	
	Для Каждого Стр из ТЗДанныхБУ Цикл
		
		МассивКоличества = ТЗДанныхУЛТМ.НайтиСтроки(Новый СТруктура("УЛТМ",Стр.УчетныйЛист));
		МассивДляРаспределения = Новый Массив;
		Для Каждого ЭлМассива Из МассивКоличества Цикл
			МассивДляРаспределения.Добавить(ЭлМассива.Количество);
		КонецЦикла;
		
		МассивСуммыБУ = ОбщегоНазначения.РаспределитьПропорционально(Стр.РасходГСМБУСтоимость, МассивДляРаспределения, 3);	
		МассивКоличествоБУ = ОбщегоНазначения.РаспределитьПропорционально(Стр.РасходГСМБУКоличество, МассивДляРаспределения, 3);		
		Если МассивСуммыБУ = Неопределено ИЛИ МассивКоличествоБУ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Ит = 0 По МассивСуммыБУ.Количество()-1 Цикл
			ИндексСтроки = ТЗДанныхУЛТМ.Индекс(МассивКоличества[Ит]);
			ТЗДанныхУЛТМ[ИндексСтроки].РасходГСМБУСтоимость  = МассивСуммыБУ[Ит];	
			ТЗДанныхУЛТМ[ИндексСтроки].РасходГСМБУКоличество = МассивКоличествоБУ[Ит];	
		КонецЦикла;		
	КонецЦикла;
	
	Возврат ТЗДанныхУЛТМ;		

КонецФункции // ТЗРаспределитьПропорционально()

Функция ПолучитьДанныеУЛТМ(НачалоПериода,КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	цУчетныйЛистТрактористаМашинистаВыработка.Ссылка КАК УЛТМ,
		|	цУчетныйЛистТрактористаМашинистаВыработка.КлючСтроки,
		|	цУчетныйЛистТрактористаМашинистаВыработка.Количество,
		|	0 КАК РасходГСМБУСтоимость,
		|	0 КАК РасходГСМБУКоличество
		|ИЗ
		|	Документ.цУчетныйЛистТрактористаМашиниста.Выработка КАК цУчетныйЛистТрактористаМашинистаВыработка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.цСведенияОТехнике КАК Техника
		|		ПО цУчетныйЛистТрактористаМашинистаВыработка.Ссылка.Трактор = Техника.ОсновноеСредство
		|ГДЕ
		|	цУчетныйЛистТрактористаМашинистаВыработка.Ссылка.Проведен = ИСТИНА
		|	И цУчетныйЛистТрактористаМашинистаВыработка.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И цУчетныйЛистТрактористаМашинистаВыработка.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.цВидыОперацийУчетныйПутевойЛист.Собственный)";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	
	Возврат Запрос.Выполнить().Выгрузить();	

КонецФункции // ТЗРаспределитьПропорционально()

Функция ПолучитьДанныеБУ(НачалоПериода,КонецПериода)
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ПартииТоваровНаСкладах.Количество) КАК РасходГСМБУКоличество,
		|	СУММА(ПартииТоваровНаСкладах.Стоимость) КАК РасходГСМБУСтоимость,
		|	цДокументы2Уровня.Регистратор КАК УчетныйЛист
		|ИЗ
		|	РегистрСведений.цДокументы2Уровня КАК цДокументы2Уровня
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|		ПО цДокументы2Уровня.ТиповойДокумент = ПартииТоваровНаСкладах.Регистратор
		|ГДЕ
		|	ПартииТоваровНаСкладах.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.Топливо)
		|	И ПартииТоваровНаСкладах.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПартииТоваровНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ПартииТоваровНаСкладах.Регистратор ССЫЛКА Документ.ТребованиеНакладная
		|
		|СГРУППИРОВАТЬ ПО
		|	цДокументы2Уровня.Регистратор";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	
	Возврат Запрос.Выполнить().Выгрузить(); 	

КонецФункции // ТЗРаспределитьПропорционально()



Процедура СохранитьНастройку() Экспорт

	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

Процедура ПрименитьНастройку() Экспорт
	
	Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);

	// Считываение структуры настроек отчета
 	Если Не СохраненнаяНастройка.Пустая() Тогда
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		Если Не СтруктураНастроек = Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры


Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	СтруктураНатроек = Новый Структура();
	Возврат СтруктураНатроек;
	
КонецФункции

#КонецЕсли

#Если Клиент Тогда
	
// Настройка отчета при отработки расшифровки
Процедура Настроить(Отбор) Экспорт
	
	// Настройка отбора
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
		Иначе
			ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
		КонецЕсли;
		
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
		Иначе
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			Если ЭлементОтбора.Иерархия Тогда
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
	
КонецПроцедуры

#КонецЕсли

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
КонецПроцедуры // ДоработатьКомпоновщикПередВыводом()

Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;
