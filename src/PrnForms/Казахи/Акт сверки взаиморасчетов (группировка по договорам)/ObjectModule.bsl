Перем мВалютаРегламентированногоУчета Экспорт;

Функция ПечатьАктаСверки()
	
	СписокДокументовСФ = Новый СписокЗначений;
	СписокДокументовСФ.Добавить("СчетФактураВыданный");	
	СписокДокументовСФ.Добавить("СчетФактураПолученный");
	
	Если СсылкаНаОбъект.ПоДаннымОрганизации.Количество() = 0 и СсылкаНаОбъект.ПоДаннымКонтрагента.Количество() = 0 И СсылкаНаОбъект.ОстатокНаНачало = 0 Тогда
		//Предупреждение("Нет данных для печати.
		//				|Используйте кнопку ""Заполнить.""");
		Возврат Неопределено;
	КонецЕсли;

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктСверкиВзаиморасчетов_АктСверки_Внешняя";
	Макет = ПолучитьМакет("АктСверки");

	ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьНачОстатки   = Макет.ПолучитьОбласть("НачОстатки");
	ОбластьОбороты      = Макет.ПолучитьОбласть("Обороты");
	ОбластьСФ           = Макет.ПолучитьОбласть("СФ");
	ОбластьОборотыИтог  = Макет.ПолучитьОбласть("ОборотыИтог");
	ОбластьКонОстатки   = Макет.ПолучитьОбласть("КонОстатки");
	ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьНачОстаткиДоговор  = Макет.ПолучитьОбласть("НачОстаткиДоговор");
	ОбластьОборотыИтогДоговор = Макет.ПолучитьОбласть("ОборотыИтогДоговор");
	ОбластьКонОстаткиДоговор  = Макет.ПолучитьОбласть("КонОстаткиДоговор");
	
	НазваниеОрганизации = СсылкаНаОбъект.Организация.НаименованиеПолное;
	Если ПустаяСтрока(НазваниеОрганизации) Тогда
		НазваниеОрганизации = СсылкаНаОбъект.Организация;
	КонецЕсли;
	
	ТекстРНН_БИН_Организации = "";
	ОрганизацияРНН_БИН		 = ОбщегоНазначения.ПолучитьРегистрационныйНомерОрганизацииКонтрагентаВПечатнуюФорму(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата, Ложь, ТекстРНН_БИН_Организации);
	
	ТекстРНН_БИН_Контрагента = "";
	КонтрагентРНН_БИН		 = ОбщегоНазначения.ПолучитьРегистрационныйНомерОрганизацииКонтрагентаВПечатнуюФорму(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Дата, Ложь, ТекстРНН_БИН_Контрагента);
	
	НаименованиеКонтрагента = СсылкаНаОбъект.Контрагент.НаименованиеПолное;
	Если ПустаяСтрока(НаименованиеКонтрагента) Тогда
		НаименованиеКонтрагента = СсылкаНаОбъект.Контрагент;
	КонецЕсли;
	
	РННКонтрагента = СсылкаНаОбъект.Контрагент.РНН;
	
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
	ОписаниеПериода = "Период: " + ПредставлениеПериода(НачалоДня(СсылкаНаОбъект.ДатаНачала), КонецДня(СсылкаНаОбъект.ДатаОкончания), "ФП = Истина");
	ИмяПредставителяОрганизации = СсылкаНаОбъект.ПредставительОрганизации;
	ИмяПредсатвителяКонтрагента = СсылкаНаОбъект.ПредставительКонтрагента;
	
	ТекстЗаголовка = "взаимных расчетов за период с " + Формат(СсылкаНаОбъект.ДатаНачала, "ДФ=dd.MM.yyyy") + " по " + Формат(СсылкаНаОбъект.ДатаОкончания, "ДФ=dd.MM.yyyy") + Символы.ПС
					+ "между " + НазваниеОрганизации + Символы.ПС + "и " + НаименованиеКонтрагента;
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента) Тогда
	    ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + "по договору " + СокрЛП(СсылкаНаОбъект.ДоговорКонтрагента.Наименование);
	КонецЕсли;
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = ТекстЗаголовка;
	
	ДанныеПредставителяОрганизации = ПроцедурыУправленияПерсоналом.ДанныеФизЛица(СсылкаНаОбъект.Организация, СсылкаНаОбъект.ПредставительОрганизации, СсылкаНаОбъект.ДатаОкончания);
	ФИОПредставителя = ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Фамилия),"",ДанныеПредставителяОрганизации.Фамилия
					+ ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Имя),""," "+ДанныеПредставителяОрганизации.Имя)
					+ ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Отчество),""," "+ДанныеПредставителяОрганизации.Отчество));
	
	СтрЗаголовокТаблица = "Мы, нижеподписавшиеся, " + ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Должность),"________________",ДанныеПредставителяОрганизации.Должность) + " " + НазваниеОрганизации 
				+ " " + ?(ФИОПредставителя<>"",ФИОПредставителя,"_______________________") + ", с одной стороны, "
				+ "и " + ?(Не ЗначениеЗаполнено(СсылкаНаОбъект.ПредставительКонтрагента.Должность),"________________",СсылкаНаОбъект.ПредставительКонтрагента.Должность) + " " + НаименованиеКонтрагента + " " 
				+ ?(Не ЗначениеЗаполнено(СсылкаНаОбъект.ПредставительКонтрагента),"_______________________",СсылкаНаОбъект.ПредставительКонтрагента) + ", с другой стороны, "
				+ "составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:";
	
	ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица = СтрЗаголовокТаблица;
	ОбластьЗаголовок.Параметры.ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ИтСуммаОборотДт      = 0;
	ИтСуммаОборотКт      = 0;
	ИтСуммаОборотДтКонтр = 0;
	ИтСуммаОборотКтКонтр = 0;
	
	// Сальдо на начало общее
	НачОстДебет  = ?(СсылкаНаОбъект.ОстатокНаНачало > 0, СсылкаНаОбъект.ОстатокНаНачало, 0);
	НачОстКредит = ?(СсылкаНаОбъект.ОстатокНаНачало < 0, - СсылкаНаОбъект.ОстатокНаНачало, 0);
	
	// Сальдо на конец по организации общее
	ОстатокНаКонец = СсылкаНаОбъект.ОстатокНаНачало + СсылкаНаОбъект.ПоДаннымОрганизации.Итог("Дебет") - СсылкаНаОбъект.ПоДаннымОрганизации.Итог("Кредит");	
	КонОстДебет  = ?(ОстатокНаКонец > 0, ОстатокНаКонец, 0);
	КонОстКредит = ?(ОстатокНаКонец < 0, - ОстатокНаКонец, 0);
	
	// Сальдо на конец по контрагенту общее
	ОстатокНаКонецК = - СсылкаНаОбъект.ОстатокНаНачало + СсылкаНаОбъект.ПоДаннымКонтрагента.Итог("Дебет") - СсылкаНаОбъект.ПоДаннымКонтрагента.Итог("Кредит"); 	
	КонОстДебетК  = ?(ОстатокНаКонецК > 0, ОстатокНаКонецК, 0);
	КонОстКредитК = ?(ОстатокНаКонецК < 0, - ОстатокНаКонецК, 0);
	
	ОбластьНачОстатки.Параметры.ДатаНачала = Формат(СсылкаНаОбъект.ДатаНачала, "ДЛФ=DD");
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = НачОстДебет;
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = НачОстКредит;
	ТабДок.Вывести(ОбластьНачОстатки);
	
	ДанныеДляЗаполнения = СформироватьЗапрос();
	
	ВыборкаПоДоговорам = ДанныеДляЗаполнения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоДоговорам.Следующий() Цикл
		
		// Общие итоги по оборотам      		
		ИтСуммаОборотДт      = ИтСуммаОборотДт + ВыборкаПоДоговорам.Дебет;
		ИтСуммаОборотКт      = ИтСуммаОборотКт + ВыборкаПоДоговорам.Кредит;
		ИтСуммаОборотДтКонтр = ИтСуммаОборотДтКонтр + ВыборкаПоДоговорам.ДебетК;
		ИтСуммаОборотКтКонтр = ИтСуммаОборотКтКонтр + ВыборкаПоДоговорам.КредитК; 
		
		// Сальдо на начало по договору
		НачОстДебет  = ?(ВыборкаПоДоговорам.НачальныйОстаток > 0, ВыборкаПоДоговорам.НачальныйОстаток, 0);
		НачОстКредит = ?(ВыборкаПоДоговорам.НачальныйОстаток < 0, - ВыборкаПоДоговорам.НачальныйОстаток, 0); 
		
		// Сальдо на конец по договору по организации
		ОстатокНаКонецДог = ВыборкаПоДоговорам.НачальныйОстаток + ВыборкаПоДоговорам.Дебет - ВыборкаПоДоговорам.Кредит; 		
		КонОстДебетДог  = ?(ОстатокНаКонецДог > 0, ОстатокНаКонецДог, 0);
		КонОстКредитДог = ?(ОстатокНаКонецДог < 0, - ОстатокНаКонецДог, 0);
		
		// Сальдо на конец по договору по контрагенту
		ОстатокНаКонецКДог = - ВыборкаПоДоговорам.НачальныйОстаток + ВыборкаПоДоговорам.ДебетК - ВыборкаПоДоговорам.КредитК;    		
		КонОстДебетКДог  = ?(ОстатокНаКонецКДог > 0, ОстатокНаКонецКДог, 0);
		КонОстКредитКДог = ?(ОстатокНаКонецКДог < 0, - ОстатокНаКонецКДог, 0);    		
		
		
		ОбластьНачОстаткиДоговор.Параметры.ДоговорКонтрагента = """" + ВыборкаПоДоговорам.ДоговорКонтрагента + """";		
		ОбластьНачОстаткиДоговор.Параметры.ДатаНачала = Формат(СсылкаНаОбъект.ДатаНачала, "ДЛФ=ДД");	
		ОбластьНачОстаткиДоговор.Параметры.СуммаНачальныйОстатокДтДоговор = НачОстДебет;
		ОбластьНачОстаткиДоговор.Параметры.СуммаНачальныйОстатокКтДоговор = НачОстКредит;
		Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента) Тогда 
			ТабДок.Вывести(ОбластьНачОстаткиДоговор);
		КонецЕсли;	
		
		ВыборкаДокументы = ВыборкаПоДоговорам.Выбрать();
		
		Пока ВыборкаДокументы.Следующий() Цикл
			
			Если ВыборкаДокументы.Документ = Неопределено И ВыборкаДокументы.ДокументК = Неопределено Тогда 
				Продолжить;
			КонецЕсли;	
			
			ОбластьОбороты.Параметры.Регистратор = ВыборкаДокументы.Документ;

			ОбластьОбороты.Параметры.СуммаОборотДт = ВыборкаДокументы.Дебет;
			ОбластьОбороты.Параметры.СуммаОборотКт = ВыборкаДокументы.Кредит;
			ОбластьОбороты.Параметры.ДатаДокумента = Формат(ВыборкаДокументы.Дата, "ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
			
			//Если документ имеет реквизиты вхоядщего документа то выводятся они, иначе информация самого документа
			Если ВыборкаДокументы.Документ <> Неопределено Тогда
				Если ЗначениеЗаполнено(ВыборкаДокументы.Документ)  
						И ВыборкаДокументы.Документ.Метаданные().Реквизиты.Найти("ВидВходящегоДокумента") <> Неопределено
						И ЗначениеЗаполнено(ВыборкаДокументы.Документ.ВидВходящегоДокумента) Тогда 
					ОбластьОбороты.Параметры.РегистраторПредставление = ФормированиеПечатныхФорм.ПолучитьПредставлениеВходящегоДокумента(ВыборкаДокументы.Документ)
				Иначе 
					ОбластьОбороты.Параметры.РегистраторПредставление = ВыборкаДокументы.Документ.Метаданные().Синоним +" " 
																	+ СокрЛП(ВыборкаДокументы.Документ.Номер) + " от " 
																	+  Формат(ВыборкаДокументы.Документ.Дата, "ДФ=dd.MM.yyyy");
				КонецЕсли;
			КонецЕсли;     			
			
			ОбластьОбороты.Параметры.СуммаОборотДтКонтр = ВыборкаДокументы.ДебетК;
			ОбластьОбороты.Параметры.СуммаОборотКтКонтр = ВыборкаДокументы.КредитК;   						
			ОбластьОбороты.Параметры.ДатаДокументаКонтр = Формат(ВыборкаДокументы.ДатаК, "ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");     			
			
			Если ВыборкаДокументы.ДокументК <> Неопределено Тогда
				Если ЗначениеЗаполнено(ВыборкаДокументы.ДокументК)  
						И ВыборкаДокументы.ДокументК.Метаданные().Реквизиты.Найти("ВидВходящегоДокумента") <> Неопределено
						И ЗначениеЗаполнено(ВыборкаДокументы.ДокументК.ВидВходящегоДокумента) Тогда 
					ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = ФормированиеПечатныхФорм.ПолучитьПредставлениеВходящегоДокумента(ВыборкаДокументы.ДокументК)
				Иначе 
					ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = ВыборкаДокументы.ДокументК.Метаданные().Синоним +" " 
																	+ СокрЛП(ВыборкаДокументы.ДокументК.Номер) + " от " 
																	+  Формат(ВыборкаДокументы.ДокументК.Дата, "ДФ=dd.MM.yyyy");
				КонецЕсли;    
			КонецЕсли;					
			
			ТабДок.Вывести(ОбластьОбороты);
			
			ОбластьОбороты.Параметры.СуммаОборотДт = "";
			ОбластьОбороты.Параметры.СуммаОборотКт = "";
			ОбластьОбороты.Параметры.РегистраторПредставление = "";
			ОбластьОбороты.Параметры.Регистратор = "";
			ОбластьОбороты.Параметры.ДатаДокумента = "";
			ОбластьОбороты.Параметры.СуммаОборотДтКонтр = "";
			ОбластьОбороты.Параметры.СуммаОборотКтКонтр = "";
			ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = "";
			ОбластьОбороты.Параметры.ДатаДокументаКонтр = "";  			
			
			
			//выведем подчиненные счета-фактуры, если имеются
			
			ДокументСФ      = Неопределено;
			ДокументСФКонтр = Неопределено;
			Выводить        = Ложь;
			
			Для Каждого СФ Из СписокДокументовСФ Цикл    
				ОбластьСФ.Параметры.ДокументСФ 		   = "";
				ОбластьСФ.Параметры.РасшифровкаСФ 	   = "";
				ОбластьСФ.Параметры.ДокументСФКонтр    = "";
				ОбластьСФ.Параметры.РасшифровкаСФКонтр = "";
				Если ВыборкаДокументы.Документ <> Неопределено Тогда
					ДокументСФ = ОбщегоНазначения.НайтиПодчиненныйДокумент(ВыборкаДокументы.Документ, СФ.Значение);
				КонецЕсли;  			
				Если ВыборкаДокументы.ДокументК <> Неопределено Тогда
					ДокументСФКонтр = ОбщегоНазначения.НайтиПодчиненныйДокумент(ВыборкаДокументы.ДокументК, СФ.Значение);
				КонецЕсли; 				
				Если ДокументСФ <> Неопределено Тогда
					Если СФ.Значение = "СчетФактураПолученный" Тогда
						Документ = Документы.СчетФактураПолученный.ПустаяСсылка().Метаданные().Синоним;
						Если ЗначениеЗаполнено(ДокументСФ.НомерВходящегоДокумента) Тогда
							Документ = Документ + " № вх. " + ДокументСФ.НомерВходящегоДокумента;
						КонецЕсли;
						Если ЗначениеЗаполнено(ДокументСФ.ДатаВходящегоДокумента) Тогда
							Документ = Документ + " от " + Формат(ДокументСФ.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy");
						КонецЕсли;
					ИначеЕсли ДокументСФКонтр <> Неопределено Тогда 
							Документ = ДокументСФ.Метаданные().Синоним +" " 
									   + СокрЛП(ДокументСФКонтр.Номер) + " от " 
									   + Формат(ДокументСФКонтр.Дата, "ДФ=dd.MM.yyyy");

					КонецЕсли;
					ОбластьСФ.Параметры.ДокументСФ = Документ;
					ОбластьСФ.Параметры.РасшифровкаСФ = ДокументСф;
					Выводить = Истина;
				КонецЕсли;
				Если ДокументСФКонтр <> Неопределено Тогда
					Выводить = Истина; 				
					Если СФ.Значение = "СчетФактураПолученный" Тогда
						Документ = Документы.СчетФактураПолученный.ПустаяСсылка().Метаданные().Синоним;
						Если ЗначениеЗаполнено(ДокументСФКонтр.НомерВходящегоДокумента) Тогда
							Документ = Документ + " № вх. " + ДокументСФКонтр.НомерВходящегоДокумента;
						КонецЕсли;
						Если ЗначениеЗаполнено(ДокументСФКонтр.ДатаВходящегоДокумента) Тогда
							Документ = Документ + " от " + Формат(ДокументСФКонтр.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy");
						КонецЕсли;
					Иначе
						Документ = ДокументСФКонтр.Метаданные().Синоним +" " 
								   + СокрЛП(ДокументСФКонтр.Номер) + " от " 
								   + Формат(ДокументСФКонтр.Дата, "ДФ=dd.MM.yyyy");

					КонецЕсли;     
					ОбластьСФ.Параметры.ДокументСФКонтр = Документ;
					ОбластьСФ.Параметры.РасшифровкаСФКонтр = ДокументСфКонтр;
				КонецЕсли; 
			КонецЦикла;
			
			Если Выводить Тогда
				ТабДок.Вывести(ОбластьСФ);
			КонецЕсли; 			
			
		КонецЦикла;	
		
		ОбластьОборотыИтогДоговор.Параметры.ДоговорКонтрагента 	 = """" + ВыборкаПоДоговорам.ДоговорКонтрагента + """";
		ОбластьОборотыИтогДоговор.Параметры.СуммаОборотДтДоговор = ВыборкаПоДоговорам.Дебет;
		ОбластьОборотыИтогДоговор.Параметры.СуммаОборотКтДоговор = ВыборкаПоДоговорам.Кредит;
		
		Если СсылкаНаОбъект.СверкаСогласована Тогда
			ОбластьОборотыИтогДоговор.Параметры.СуммаОборотДтКонтрДоговор = ВыборкаПоДоговорам.ДебетК;
			ОбластьОборотыИтогДоговор.Параметры.СуммаОборотКтКонтрДоговор = ВыборкаПоДоговорам.КредитК;
		КонецЕсли;          		
		
		Если Не ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента) Тогда 
			ТабДок.Вывести(ОбластьОборотыИтогДоговор);
		КонецЕсли;	
		
		ОбластьКонОстаткиДоговор.Параметры.ДатаОкончания 				 = Формат(СсылкаНаОбъект.ДатаОкончания, "ДЛФ=DD");
		ОбластьКонОстаткиДоговор.Параметры.ДоговорКонтрагента 			 = """" + ВыборкаПоДоговорам.ДоговорКонтрагента + """";
		ОбластьКонОстаткиДоговор.Параметры.СуммаКонечныйОстатокДтДоговор = КонОстДебетДог;
		ОбластьКонОстаткиДоговор.Параметры.СуммаКонечныйОстатокКтДоговор = КонОстКредитДог;
		
		Если СсылкаНаОбъект.СверкаСогласована Тогда 
			ОбластьКонОстаткиДоговор.Параметры.СуммаКонечныйОстатокДтКонтрДоговор = КонОстДебетКДог;
			ОбластьКонОстаткиДоговор.Параметры.СуммаКонечныйОстатокКтКонтрДоговор = КонОстКредитКДог;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента) Тогда  
			ТабДок.Вывести(ОбластьКонОстаткиДоговор); 		
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если Не СсылкаНаОбъект.СверкаСогласована Тогда
		НачальныйНомер = 1;
		Для Итерация = 1 По 5 Цикл
			ТабДок.Вывести(ОбластьПустаяСтрока);
			НачальныйНомер = НачальныйНомер + 1;
		КонецЦикла;		
	КонецЕсли;  	

	ОбластьОборотыИтог.Параметры.СуммаОборотДт = ИтСуммаОборотДт;
	ОбластьОборотыИтог.Параметры.СуммаОборотКт = ИтСуммаОборотКт;
	Если СсылкаНаОбъект.СверкаСогласована Тогда 
		ОбластьОборотыИтог.Параметры.СуммаОборотДтКонтр = ИтСуммаОборотДтКонтр;
		ОбластьОборотыИтог.Параметры.СуммаОборотКтКонтр = ИтСуммаОборотКтКонтр;
	КонецЕсли;
	ТабДок.Вывести(ОбластьОборотыИтог);
	
	ОбластьКонОстатки.Параметры.ДатаОкончания 		   = Формат(СсылкаНаОбъект.ДатаОкончания, "ДЛФ=DD");
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = КонОстДебет;
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = КонОстКредит;
	
	Если СсылкаНаОбъект.СверкаСогласована Тогда 
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДтКонтр = КонОстДебетК;
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКтКонтр = КонОстКредитК;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьКонОстатки);
	
	// Результаты сверки   	
	Если СсылкаНаОбъект.ПоДаннымОрганизации.Количество() = 0 Тогда
		РезультатыСверки = "<сверка не проведена>";
	ИначеЕсли Не ЗначениеЗаполнено(СсылкаНаОбъект.ДатаОкончания) Тогда
		РезультатыСверки = "<не указана дата сверки>";
	ИначеЕсли Не ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент) Тогда
		РезультатыСверки = "<не указан контрагент>";
	Иначе
		РезультатыСверки = "на " + Формат(СсылкаНаОбъект.ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";  			
		Если ОстатокНаКонец > 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + Строка(СсылкаНаОбъект.ВалютаДокумента);	
	   	ИначеЕсли ОстатокНаКонец < 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(- ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + Строка(СсылкаНаОбъект.ВалютаДокумента);	
	   	Иначе
	   		РезультатыСверки = РезультатыСверки + "отсутствует.";
	   	КонецЕсли;
	КонецЕсли;   	
	ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки;
	
	Если СсылкаНаОбъект.СверкаСогласована Тогда 
		ОбластьПодвал.Параметры.ПоДаннымКонтрагента = "По данным " + СокрЛП(НаименованиеКонтрагента);
		
	   	Если СсылкаНаОбъект.ПоДаннымКонтрагента.Количество() = 0 Тогда
	   		РезультатыСверки = "<сверка не проведена>";
	  	ИначеЕсли Не ЗначениеЗаполнено(СсылкаНаОбъект.ДатаОкончания) Тогда
	   		РезультатыСверки = "<не указана дата сверки>";
	   	ИначеЕсли Не ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент) Тогда
	   		РезультатыСверки = "<не указан контрагент>";
	   	Иначе
			РезультатыСверки = "на " + Формат(СсылкаНаОбъект.ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
				
		   	Если ОстатокНаКонецК < 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(- ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " + Строка(СсылкаНаОбъект.ВалютаДокумента);
		
		   	ИначеЕсли ОстатокНаКонецК > 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " + Строка(СсылкаНаОбъект.ВалютаДокумента);
		
		   	Иначе
		   		РезультатыСверки = РезультатыСверки + "отсутствует.";
		   	КонецЕсли;
	   	КонецЕсли;
		
		ОбластьПодвал.Параметры.РезультатыСверкиК = РезультатыСверки;
		
		Если ОстатокНаКонец + ОстатокНаКонецК <> 0 Тогда
			 ИтогСверки = "В результате сверки выявлено расхождение информации о состоянии расчетов в размере " + Формат(?(ОстатокНаКонец + ОстатокНаКонецК > 0, 1, -1) * (ОстатокНаКонец + ОстатокНаКонецК), "ЧЦ=21; ЧДЦ=2") + " " + Строка(СсылкаНаОбъект.ВалютаДокумента);
			 ОбластьПодвал.Параметры.ИтогСверки = Символы.ПС + ИтогСверки + Символы.ПС + " ";
		КонецЕсли; 
	КонецЕсли;
	
	ОбластьПодвал.Параметры.ТекстРНН_БИН_Организации = СокрЛП(ТекстРНН_БИН_Организации);
	ОбластьПодвал.Параметры.ТекстРНН_БИН_Контрагента = СокрЛП(ТекстРНН_БИН_Контрагента); 
	
	ОбластьПодвал.Параметры.НазваниеОрганизации      = СокрЛП(НазваниеОрганизации);
	ОбластьПодвал.Параметры.ОрганизацияРНН_БИН       = СокрЛП(ОрганизацияРНН_БИН);
	ОбластьПодвал.Параметры.НаименованиеКонтрагента  = СокрЛП(НаименованиеКонтрагента);
	ОбластьПодвал.Параметры.КонтрагентРНН_БИН        = СокрЛП(КонтрагентРНН_БИН);
	
	ОбластьПодвал.Параметры.Должность  = ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Должность),"________________",ДанныеПредставителяОрганизации.Должность);
	ОбластьПодвал.Параметры.ДолжностьК = ?(Не ЗначениеЗаполнено(СсылкаНаОбъект.ПредставительКонтрагента.Должность),"________________",СсылкаНаОбъект.ПредставительКонтрагента.Должность);
	
	ОбластьПодвал.Параметры.ФИОПредставителя  = "("+?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Представление),"_______________________",ДанныеПредставителяОрганизации.Представление)+")";
	ОбластьПодвал.Параметры.ФИОПредставителяК = "("+?(Не ЗначениеЗаполнено(СсылкаНаОбъект.ПредставительКонтрагента),"_______________________",СсылкаНаОбъект.ПредставительКонтрагента)+")";
	
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.АвтоМасштаб = Истина;
	
	Возврат ТабДок;	
	
КонецФункции

Функция Печать() Экспорт
	
	Возврат ПечатьАктаСверки();
	
КонецФункции 

Функция СформироватьЗапрос()

	ФильтрСписокСчетов = Новый Массив();
	Для Каждого СтрокаСчета Из СсылкаНаОбъект.СписокСчетов Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
			Продолжить;
		Иначе
			ФильтрСписокСчетов.Добавить(СтрокаСчета.Счет);
		КонецЕсли; 
	КонецЦикла; 
	
 	АналитикаРасчетов = Новый Массив();
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Договоры);
	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", 			СсылкаНаОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустаяДата", 		Дата(0001, 01, 01, 00, 00, 00));
	Запрос.УстановитьПараметр("ДатаНачала", 		СсылкаНаОбъект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаПослеОкончания", ?(НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ДатаОкончания), СсылкаНаОбъект.ДатаОкончания, КонецДня(СсылкаНаОбъект.ДатаОкончания) + 1));
	Запрос.УстановитьПараметр("СписокОрганизаций",  ПолучитьСписокОрганизацийПоТабЧасти());
	Запрос.УстановитьПараметр("ВидыСубконто", 		АналитикаРасчетов);
	Запрос.УстановитьПараметр("Валюта",        		?(НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ВалютаДокумента) Или (СсылкаНаОбъект.ВалютаДокумента = мВалютаРегламентированногоУчета), Неопределено, СсылкаНаОбъект.ВалютаДокумента));
	Запрос.УстановитьПараметр("СписокСчетов", 		ФильтрСписокСчетов);  
	Запрос.УстановитьПараметр("ДоговорКонтрагента", СсылкаНаОбъект.ДоговорКонтрагента);
	
	Если Не СсылкаНаОбъект.ВключатьДочерние Тогда
		Запрос.УстановитьПараметр("Контрагент", 	СсылкаНаОбъект.Контрагент);
	Иначе
		ЗапросКонтрагентов = Новый Запрос;
		
		ЗапросКонтрагентов.Текст = "ВЫБРАТЬ
		                           |	Контрагенты.Ссылка КАК Контрагент
		                           |ИЗ
		                           |	Справочник.Контрагенты КАК Контрагенты
		                           |ГДЕ
		                           |	(Контрагенты.ГоловнойКонтрагент = &ГоловнойКонтрагент
		                           |			ИЛИ Контрагенты.Ссылка = &ГоловнойКонтрагент)";
								   
		ЗапросКонтрагентов.УстановитьПараметр("ГоловнойКонтрагент", СсылкаНаОбъект.Контрагент);
		РезультатЗапросаКонтрагентов = ЗапросКонтрагентов.Выполнить();
		
		Если Не РезультатЗапросаКонтрагентов.Пустой() Тогда
			СписокКонтрагентов = Новый СписокЗначений;
			ВыборкаЗапросаКонтрагентов = РезультатЗапросаКонтрагентов.Выбрать();
			Пока ВыборкаЗапросаКонтрагентов.Следующий() Цикл
				СписокКонтрагентов.Добавить(ВыборкаЗапросаКонтрагентов.Контрагент);
			КонецЦикла;
			Запрос.УстановитьПараметр("Контрагент", СписокКонтрагентов);
		Иначе
			Запрос.УстановитьПараметр("Контрагент", СсылкаНаОбъект.Контрагент);
		КонецЕсли;
		
	КонецЕсли;       	
	
	//УсловиеПоТипамДокументовОрганизация = "(ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ) = ТИП(Документ.КорректировкаДолга)";
	//Для Каждого ТипЗначения Из СсылкаНаОбъект.Метаданные().ТабличныеЧасти.ПоДаннымОрганизации.Реквизиты.Документ.Тип.Типы() Цикл
	//	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗначения);
	//	Если ОбъектМетаданных = Неопределено Тогда 
	//		Продолжить;
	//	КонецЕсли;	
	//	Если ОбъектМетаданных.Реквизиты.Найти("ДоговорКонтрагента") = Неопределено Тогда 
	//		УсловиеПоТипамДокументовОрганизация = УсловиеПоТипамДокументовОрганизация + " ИЛИ " + "ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ) = ТИП(Документ." + ОбъектМетаданных.Имя + ")";	
	//	КонецЕсли;	
	//КонецЦикла;	
	//УсловиеПоТипамДокументовОрганизация = УсловиеПоТипамДокументовОрганизация + ") ";
	//УсловиеПоТипамДокументовКонтрагенты = СтрЗаменить(УсловиеПоТипамДокументовОрганизация, "АктСверкиВзаиморасчетовПоДаннымОрганизации", "АктСверкиВзаиморасчетовПоДаннымКонтрагента");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ
	               |ПОМЕСТИТЬ ВТ_Документы
	               |ИЗ
	               |	Документ.АктСверкиВзаиморасчетов.ПоДаннымОрганизации КАК АктСверкиВзаиморасчетовПоДаннымОрганизации
	               |ГДЕ
	               |	АктСверкиВзаиморасчетовПоДаннымОрганизации.Ссылка = &Ссылка
	               |	И (ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ) = ТИП(Документ.КорректировкаДолга) 
				   |	   ИЛИ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента ЕСТЬ NULL 
				   |	   ИЛИ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ
	               |ИЗ
	               |	Документ.АктСверкиВзаиморасчетов.ПоДаннымКонтрагента КАК АктСверкиВзаиморасчетовПоДаннымКонтрагента
	               |ГДЕ
	               |	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Ссылка = &Ссылка
	               |	И (ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ) = ТИП(Документ.КорректировкаДолга) 
				   |	   ИЛИ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента ЕСТЬ NULL 
				   |	   ИЛИ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))				   
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Регистратор КАК Регистратор,
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента,
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Контрагент,
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Организация,
				   |	СУММА(ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовПриход) КАК СуммаВзаиморасчетовПриход,
	               |	СУММА(ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.СуммаВзаиморасчетовРасход) КАК СуммаВзаиморасчетовРасход
	               |ПОМЕСТИТЬ ВТ_ДанныеПоКорректировкам
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.ОстаткиИОбороты(, , Регистратор, , Контрагент = &Контрагент) КАК ВзаиморасчетыСКонтрагентамиОстаткиИОбороты
	               |ГДЕ
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Регистратор В
	               |			(ВЫБРАТЬ
	               |				ВТ_Документы.Документ
	               |			ИЗ
	               |				ВТ_Документы КАК ВТ_Документы)"
	               + ?(ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента), " И ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента = &ДоговорКонтрагента ", " ") + "
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Регистратор,
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.ДоговорКонтрагента,
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Контрагент,
	               |	ВзаиморасчетыСКонтрагентамиОстаткиИОбороты.Организация
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Регистратор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	АктСверкиВзаиморасчетовПоДаннымОрганизации.Дата,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ) = ТИП(Документ.КорректировкаДолга)
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента ЕСТЬ NULL 
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |			ТОГДА ЕСТЬNULL(ВТ_ДанныеПоКорректировкам.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	               |		ИНАЧЕ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента
	               |	КОНЕЦ КАК ДоговорКонтрагента,
	               |	АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ) = ТИП(Документ.КорректировкаДолга)
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента ЕСТЬ NULL 
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |			ТОГДА ЕСТЬNULL(ВТ_ДанныеПоКорректировкам.СуммаВзаиморасчетовПриход, 0)
	               |		ИНАЧЕ АктСверкиВзаиморасчетовПоДаннымОрганизации.Дебет
	               |	КОНЕЦ КАК Дебет,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ) = ТИП(Документ.КорректировкаДолга)
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента ЕСТЬ NULL 
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |			ТОГДА ЕСТЬNULL(ВТ_ДанныеПоКорректировкам.СуммаВзаиморасчетовРасход, 0)
	               |		ИНАЧЕ АктСверкиВзаиморасчетовПоДаннымОрганизации.Кредит
	               |	КОНЕЦ КАК Кредит
	               |ПОМЕСТИТЬ ВТ_Организация
	               |ИЗ
	               |	Документ.АктСверкиВзаиморасчетов.ПоДаннымОрганизации КАК АктСверкиВзаиморасчетовПоДаннымОрганизации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоКорректировкам КАК ВТ_ДанныеПоКорректировкам
	               |		ПО АктСверкиВзаиморасчетовПоДаннымОрганизации.Документ = ВТ_ДанныеПоКорректировкам.Регистратор
	               |ГДЕ
	               |	АктСверкиВзаиморасчетовПоДаннымОрганизации.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Дата КАК ДатаК,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ) = ТИП(Документ.КорректировкаДолга)
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента ЕСТЬ NULL 
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |			ТОГДА ЕСТЬNULL(ВТ_ДанныеПоКорректировкам.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	               |		ИНАЧЕ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента
	               |	КОНЕЦ КАК ДоговорКонтрагентаК,
	               |	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ КАК ДокументК,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ) = ТИП(Документ.КорректировкаДолга)
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента ЕСТЬ NULL 
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |			ТОГДА ЕСТЬNULL(ВТ_ДанныеПоКорректировкам.СуммаВзаиморасчетовРасход, 0)
	               |		ИНАЧЕ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Дебет
	               |	КОНЕЦ КАК ДебетК,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ) = ТИП(Документ.КорректировкаДолга)
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента ЕСТЬ NULL 
	               |				ИЛИ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |			ТОГДА ЕСТЬNULL(ВТ_ДанныеПоКорректировкам.СуммаВзаиморасчетовПриход, 0)
	               |		ИНАЧЕ АктСверкиВзаиморасчетовПоДаннымКонтрагента.Кредит
	               |	КОНЕЦ КАК КредитК
	               |ПОМЕСТИТЬ ВТ_Контрагенты
	               |ИЗ
	               |	Документ.АктСверкиВзаиморасчетов.ПоДаннымКонтрагента КАК АктСверкиВзаиморасчетовПоДаннымКонтрагента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоКорректировкам КАК ВТ_ДанныеПоКорректировкам
	               |		ПО АктСверкиВзаиморасчетовПоДаннымКонтрагента.Документ = ВТ_ДанныеПоКорректировкам.Регистратор
	               |ГДЕ
	               |	АктСверкиВзаиморасчетовПоДаннымКонтрагента.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.Дата,
	               |	ВложенныйЗапрос.ДокументК,
	               |	ВложенныйЗапрос.ДатаК КАК ДатаК,
	               |	СУММА(ВложенныйЗапрос.ДебетК) КАК ДебетК,
	               |	СУММА(ВложенныйЗапрос.КредитК) КАК КредитК,
	               |	ВложенныйЗапрос.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |	ВложенныйЗапрос.Документ КАК Документ,
	               |	СУММА(ВложенныйЗапрос.Дебет) КАК Дебет,
	               |	СУММА(ВложенныйЗапрос.Кредит) КАК Кредит
	               |ПОМЕСТИТЬ ВТ_ДанныеАктаСверки
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_Организация.Дата КАК Дата,
	               |		ВТ_Организация.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |		ВТ_Организация.Документ КАК Документ,
	               |		ЕСТЬNULL(ВТ_Контрагенты.ДатаК, &ПустаяДата) КАК ДатаК,
	               |		ЕСТЬNULL(ВТ_Контрагенты.ДокументК, НЕОПРЕДЕЛЕНО) КАК ДокументК,
	               |		0 КАК ДебетК,
	               |		0 КАК КредитК,
	               |		ВТ_Организация.Дебет КАК Дебет,
	               |		ВТ_Организация.Кредит КАК Кредит
	               |	ИЗ
	               |		ВТ_Организация КАК ВТ_Организация
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Контрагенты КАК ВТ_Контрагенты
	               |			ПО ВТ_Организация.Документ = ВТ_Контрагенты.ДокументК
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЕСТЬNULL(ВТ_Организация.Дата, &ПустаяДата),
	               |		ВТ_Контрагенты.ДоговорКонтрагентаК,
	               |		ЕСТЬNULL(ВТ_Организация.Документ, НЕОПРЕДЕЛЕНО),
	               |		ВТ_Контрагенты.ДатаК,
	               |		ВТ_Контрагенты.ДокументК,
	               |		ВТ_Контрагенты.ДебетК,
	               |		ВТ_Контрагенты.КредитК,
	               |		0,
	               |		0
	               |	ИЗ
	               |		ВТ_Контрагенты КАК ВТ_Контрагенты
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Организация КАК ВТ_Организация
	               |			ПО ВТ_Контрагенты.ДокументК = ВТ_Организация.Документ
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		&ДатаНачала,
	               |		ТиповойОстатки.Субконто2,
	               |		НЕОПРЕДЕЛЕНО,
	               |		&ДатаНачала,
	               |		НЕОПРЕДЕЛЕНО,
	               |		0,
	               |		0,
	               |		0,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Типовой.Остатки(
	               |				&ДатаНачала,
	               |				Счет В (&СписокСчетов),
	               |				&ВидыСубконто,
	               |				Организация В (&СписокОрганизаций)
	               |					И Субконто1 В (&Контрагент)
	               |					И НЕ Субконто2 В
	               |							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |								ВТ_Организация.ДоговорКонтрагента
	               |							ИЗ
	               |								ВТ_Организация КАК ВТ_Организация)
	               |					И НЕ Субконто2 В
	               |							(ВЫБРАТЬ
	               |								ВТ_Контрагенты.ДоговорКонтрагентаК
	               |							ИЗ
	               |								ВТ_Контрагенты КАК ВТ_Контрагенты)) КАК ТиповойОстатки) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Дата,
	               |	ВложенныйЗапрос.ДоговорКонтрагента,
	               |	ВложенныйЗапрос.Документ,
	               |	ВложенныйЗапрос.ДатаК,
	               |	ВложенныйЗапрос.ДокументК     	              						   
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеАктаСверки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |	ВТ_ДанныеАктаСверки.Дата КАК Дата,
	               |	ЕСТЬNULL(ВТ_ДанныеАктаСверки.Документ, Неопределено) КАК Документ,
	               |	ВТ_ДанныеАктаСверки.Дебет КАК Дебет,
	               |	ВТ_ДанныеАктаСверки.Кредит КАК Кредит,
	               |	ВТ_ДанныеАктаСверки.ДатаК,
	               |	ЕСТЬNULL(ВТ_ДанныеАктаСверки.ДокументК, Неопределено) КАК ДокументК,
	               |	ВТ_ДанныеАктаСверки.ДебетК КАК ДебетК,
	               |	ВТ_ДанныеАктаСверки.КредитК КАК КредитК,
	               |	ВЫБОР
	               |		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	               |			ТОГДА ЕСТЬNULL(ТиповойОстатки.СуммаОстаток, 0)
	               |		ИНАЧЕ ЕСТЬNULL(ТиповойОстатки.ВалютнаяСуммаОстаток, 0)
	               |	КОНЕЦ КАК НачальныйОстаток,
	               |	ЕСТЬNULL(ВЫБОР
	               |		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	               |			ТОГДА ЕСТЬNULL(ТиповойОстаткиКонечный.СуммаОстаток, 0)
	               |		ИНАЧЕ ЕСТЬNULL(ТиповойОстаткиКонечный.ВалютнаяСуммаОстаток, 0)
	               |	КОНЕЦ, 0) КАК КонечныйОстаток
	               |ИЗ
	               |	ВТ_ДанныеАктаСверки КАК ВТ_ДанныеАктаСверки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Остатки(
	               |				&ДатаНачала,
	               |				Счет В (&СписокСчетов),
	               |				&ВидыСубконто,
	               |				Организация В (&СписокОрганизаций)";
	Если (СсылкаНаОбъект.ВалютаДокумента <> мВалютаРегламентированногоУчета) и ЗначениеЗаполнено(СсылкаНаОбъект.ВалютаДокумента) Тогда
		Запрос.Текст = Запрос.Текст + "	
			   	   |		    И ВЫБОР
				   |		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
				   |		            ТОГДА ИСТИНА
				   |		        ИНАЧЕ Валюта = &Валюта
				   |		    КОНЕЦ";
	КонецЕсли;
				   
	Запрос.Текст = Запрос.Текст + "
				   |					И Субконто1 В (&Контрагент)
	               |					И Субконто2 В
	               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |							ВТ_ДанныеАктаСверки.ДоговорКонтрагента
	               |						ИЗ
	               |							ВТ_ДанныеАктаСверки КАК ВТ_ДанныеАктаСверки)) КАК ТиповойОстатки
	               |		ПО ВТ_ДанныеАктаСверки.ДоговорКонтрагента = ТиповойОстатки.Субконто2
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Остатки(
	               |				&ДатаПослеОкончания,
	               |				Счет В (&СписокСчетов),
	               |				&ВидыСубконто,
	               |				Организация В (&СписокОрганизаций)";
	Если (СсылкаНаОбъект.ВалютаДокумента <> мВалютаРегламентированногоУчета) и ЗначениеЗаполнено(СсылкаНаОбъект.ВалютаДокумента) Тогда
		Запрос.Текст = Запрос.Текст + "	
			   	   |		    И ВЫБОР
				   |		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
				   |		            ТОГДА ИСТИНА
				   |		        ИНАЧЕ Валюта = &Валюта
				   |		    КОНЕЦ";
	КонецЕсли;
				   
	Запрос.Текст = Запрос.Текст + "
	               |					И Субконто1 В (&Контрагент)
	               |					И Субконто2 В
	               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |							ВТ_ДанныеАктаСверки.ДоговорКонтрагента
	               |						ИЗ
	               |							ВТ_ДанныеАктаСверки КАК ВТ_ДанныеАктаСверки)) КАК ТиповойОстаткиКонечный
	               |		ПО ВТ_ДанныеАктаСверки.ДоговорКонтрагента = ТиповойОстаткиКонечный.Субконто2
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата
	               |ИТОГИ
	               |	СУММА(Дебет),
	               |	СУММА(Кредит),
	               |	СУММА(ДебетК),
	               |	СУММА(КредитК),
	               |	МАКСИМУМ(НачальныйОстаток),
	               |	МАКСИМУМ(КонечныйОстаток)
	               |ПО
	               |	ДоговорКонтрагента";
				   
	Возврат Запрос.Выполнить();				   

КонецФункции // СформироватьЗапрос()

Функция ПолучитьСписокОрганизацийПоТабЧасти() 
	
	мСписокСтруктурныхЕдиниц = Новый Массив;
	
	Для Каждого СтрокаСпискаОрганизаций Из СсылкаНаОбъект.СписокОрганизаций Цикл
		мСписокСтруктурныхЕдиниц.Добавить(СтрокаСпискаОрганизаций.Организация);
	КонецЦикла;
	
	Возврат мСписокСтруктурныхЕдиниц;
	
КонецФункции


мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();