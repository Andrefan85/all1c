
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать() Экспорт
	
	КоличествоЭкземпляров=1;
 	НаПринтер=Ложь;
 
	ТабДокумент = ПечатьСчетаФактуры(); 
	//ТабДокумент = Новый ТабличныйДокумент;
	
	Если ТабДокумент <> Неопределено Тогда
		//УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(СсылкаНаОбъект, ""), СсылкаНаОбъект);
	КонецЕсли; 
	
	Возврат ТабДокумент;
	
КонецФункции // Печать


Функция ПечатьСчетаФактуры() Экспорт
	
	Ссылка = СсылкаНаОбъект;
	Дата = Ссылка.Дата;
	ДатаНачала = Ссылка.ДатаНачала;
	ДатаОкончания = Ссылка.ДатаОкончания;
	ПоДаннымКонтрагента = Ссылка.ПоДаннымКонтрагента;
	ПоДаннымОрганизации = Ссылка.ПоДаннымОрганизации;
	ОстатокНаНачало = Ссылка.ОстатокНаНачало;
	Организация = Ссылка.Организация;
	Контрагент = Ссылка.Контрагент;
	ПредставительОрганизации = Ссылка.ПредставительОрганизации;
	ПредставительКонтрагента = Ссылка.ПредставительКонтрагента;
	СверкаСогласована = Ссылка.СверкаСогласована;
	ВалютаДокумента = Ссылка.ВалютаДокумента;
	ДоговорКонтрагента = Ссылка.ДоговорКонтрагента;
	
	
	
	ТабДок = Новый ТабличныйДокумент;
	
	СписокДокументовСФ = Новый СписокЗначений;
	СписокДокументовСФ.Добавить("СчетФактураВыданный");	
	СписокДокументовСФ.Добавить("СчетФактураПолученный");
	
	Если ПоДаннымОрганизации.Количество() = 0 и ПоДаннымКонтрагента.Количество() = 0 И ОстатокНаНачало = 0 Тогда
		//Предупреждение("Нет данных для печати.
		//				|Используйте кнопку ""Заполнить.""");
		Возврат Неопределено;
	КонецЕсли;

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктСверкиВзаиморасчетов_АктСверки";
	Макет  = ПолучитьМакет("АктСверки");

	ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьНачОстатки   = Макет.ПолучитьОбласть("НачОстатки");
	ОбластьОбороты      = Макет.ПолучитьОбласть("Обороты");
	ОбластьСФ           = Макет.ПолучитьОбласть("СФ");
	ОбластьОборотыИтог  = Макет.ПолучитьОбласть("ОборотыИтог");
	ОбластьКонОстатки   = Макет.ПолучитьОбласть("КонОстатки");
	ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	
	НазваниеОрганизации = Организация.НаименованиеПолное;
	Если ПустаяСтрока(НазваниеОрганизации) Тогда
		НазваниеОрганизации = Организация;
	КонецЕсли;
	
	ТекстРНН_БИН_Организации = "";
	ОрганизацияРНН_БИН		 = ОбщегоНазначения.ПолучитьРегистрационныйНомерОрганизацииКонтрагентаВПечатнуюФорму(Организация, Дата, Ложь, ТекстРНН_БИН_Организации);
	
	ТекстРНН_БИН_Контрагента = "";
	КонтрагентРНН_БИН		 = ОбщегоНазначения.ПолучитьРегистрационныйНомерОрганизацииКонтрагентаВПечатнуюФорму(Контрагент, Дата, Ложь, ТекстРНН_БИН_Контрагента);
	
	НаименованиеКонтрагента = Контрагент.НаименованиеПолное;
	Если ПустаяСтрока(НаименованиеКонтрагента) Тогда
		НаименованиеКонтрагента = Контрагент;
	КонецЕсли;
	
	РННКонтрагента    = Контрагент.РНН;
	
	ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
	ОбластьЗаголовок.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
	ОписаниеПериода = "Период: " + ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания), "ФП = Истина");
	ИмяПредставителяОрганизации = ПредставительОрганизации;
	ИмяПредсатвителяКонтрагента = ПредставительКонтрагента;
	
	ТекстЗаголовка = "взаимных расчетов за период с " + Формат(ДатаНачала, "ДФ=dd.MM.yyyy") + " по " + Формат(ДатаОкончания, "ДФ=dd.MM.yyyy") + Символы.ПС
					+ "между " + НазваниеОрганизации + Символы.ПС + "и " + НаименованиеКонтрагента;
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
	    ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + "по договору " + СокрЛП(ДоговорКонтрагента.Наименование);
	КонецЕсли;
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = ТекстЗаголовка;
	
	ДанныеПредставителяОрганизации = ПроцедурыУправленияПерсоналом.ДанныеФизЛица(Организация, ПредставительОрганизации, ДатаОкончания);
	ФИОПредставителя = ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Фамилия),"",ДанныеПредставителяОрганизации.Фамилия
					+ ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Имя),""," "+ДанныеПредставителяОрганизации.Имя)
					+ ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Отчество),""," "+ДанныеПредставителяОрганизации.Отчество));
	
	СтрЗаголовокТаблица = "Мы, нижеподписавшиеся, " + ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Должность),"________________",ДанныеПредставителяОрганизации.Должность) + " " + НазваниеОрганизации 
				+ " " + ?(ФИОПредставителя<>"",ФИОПредставителя,"_______________________") + ", с одной стороны, "
				+ "и " + ?(Не ЗначениеЗаполнено(ПредставительКонтрагента.Должность),"________________",ПредставительКонтрагента.Должность) + " " + НаименованиеКонтрагента + " " 
				+ ?(Не ЗначениеЗаполнено(ПредставительКонтрагента),"_______________________",ПредставительКонтрагента) + ", с другой стороны, "
				+ "составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:";
	
	ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица = СтрЗаголовокТаблица;
	ОбластьЗаголовок.Параметры.ВалютаДокумента = ВалютаДокумента;
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ИтСуммаОборотДт      = 0;
	ИтСуммаОборотКт      = 0;
	ИтСуммаОборотДтКонтр = 0;
	ИтСуммаОборотКтКонтр = 0;
	
	НачОстДебет  = ?(ОстатокНаНачало > 0, ОстатокНаНачало, 0);
	НачОстКредит = ?(ОстатокНаНачало < 0, -ОстатокНаНачало, 0);
	
	ОстатокНаКонец = ОстатокНаНачало + ПоДаннымОрганизации.Итог("Дебет") -  ПоДаннымОрганизации.Итог("Кредит");
	
	КонОстДебет  = ?(ОстатокНаКонец > 0, ОстатокНаКонец, 0);
	КонОстКредит = ?(ОстатокНаКонец < 0, -ОстатокНаКонец, 0);
	
	ОстатокНаКонецК = -ОстатокНаНачало + ПоДаннымКонтрагента.Итог("Дебет") -  ПоДаннымКонтрагента.Итог("Кредит");
	
	КонОстДебетК  = ?(ОстатокНаКонецК > 0, ОстатокНаКонецК, 0);
	КонОстКредитК = ?(ОстатокНаКонецК < 0, -ОстатокНаКонецК, 0);
	
	ОбластьНачОстатки.Параметры.ДатаНачала = Формат(ДатаНачала, "ДЛФ=DD");
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = НачОстДебет;
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = НачОстКредит;
	ТабДок.Вывести(ОбластьНачОстатки);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	МаксИндекс = Макс(ПоДаннымОрганизации.Количество(), ПоДаннымКонтрагента.Количество()) - 1;
	Для Инд = 0 По МаксИндекс Цикл
		Если Инд < ПоДаннымОрганизации.Количество() Тогда
			СтрокаОрганизации = ПоДаннымОрганизации[Инд];
			Регистратор = 	СтрокаОрганизации.Документ;
			СуммаОборотДт = СтрокаОрганизации.Дебет;
			СуммаОборотКт = СтрокаОрганизации.Кредит;
			ОбластьОбороты.Параметры.СуммаОборотДт = СуммаОборотДт;
			ОбластьОбороты.Параметры.СуммаОборотКт = СуммаОборотКт;
			ИтСуммаОборотДт = ИтСуммаОборотДт + СуммаОборотДт;
			ИтСуммаОборотКт = ИтСуммаОборотКт + СуммаОборотКт;
			
			
			РегистраторПредставление = "";
			//Если документ имеет реквизиты вхоядщего документа то выводятся они, иначе информация самого документа
			Если СтрокаОрганизации.Документ <> Неопределено Тогда
				Если ЗначениеЗаполнено(СтрокаОрганизации.Документ)  
						И СтрокаОрганизации.Документ.Метаданные().Реквизиты.Найти("ВидВходящегоДокумента") <> Неопределено
						И ЗначениеЗаполнено(СтрокаОрганизации.Документ.ВидВходящегоДокумента) Тогда 
					РегистраторПредставление = ФормированиеПечатныхФорм.ПолучитьПредставлениеВходящегоДокумента(СтрокаОрганизации.Документ)
				Иначе 
					РегистраторПредставление =  СтрокаОрганизации.Документ.Метаданные().Синоним +" " 
																	+ СокрЛП(СтрокаОрганизации.Документ.Номер) + " от " 
																	+  Формат(СтрокаОрганизации.Документ.Дата, "ДФ=dd.MM.yyyy");
				КонецЕсли;
			КонецЕсли;
			
			ОбластьОбороты.Параметры.РегистраторПредставление = РегистраторПредставление;
			
			
			ОбластьОбороты.Параметры.Регистратор = СтрокаОрганизации.Документ;
			ОбластьОбороты.Параметры.ДатаДокумента = Формат(СтрокаОрганизации.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
		Иначе
			ОбластьОбороты.Параметры.СуммаОборотДт = "";
			ОбластьОбороты.Параметры.СуммаОборотКт = "";
			ОбластьОбороты.Параметры.РегистраторПредставление = "";
			ОбластьОбороты.Параметры.Регистратор = "";
			ОбластьОбороты.Параметры.ДатаДокумента = "";
		КонецЕсли;
		Если Инд < ПоДаннымКонтрагента.Количество() Тогда
			СтрокаОрганизацииКонтр = ПоДаннымКонтрагента[Инд];
			Регистратор = 	СтрокаОрганизацииКонтр.Документ;
			СуммаОборотДт = СтрокаОрганизацииКонтр.Дебет;
			СуммаОборотКт = СтрокаОрганизацииКонтр.Кредит;
			ОбластьОбороты.Параметры.СуммаОборотДтКонтр = СуммаОборотДт;
			ОбластьОбороты.Параметры.СуммаОборотКтКонтр = СуммаОборотКт;
			ИтСуммаОборотДтКонтр = ИтСуммаОборотДтКонтр + СуммаОборотДт;
			ИтСуммаОборотКтКонтр = ИтСуммаОборотКтКонтр + СуммаОборотКт;
			
			РегистраторПредставлениеКонтр = "";			
			
			//Если документ имеет реквизиты вхоядщего документа то выводятся они, иначе информация самого документа
			Если СтрокаОрганизацииКонтр.Документ <> Неопределено Тогда
				Если ЗначениеЗаполнено(СтрокаОрганизацииКонтр.Документ)  
						И СтрокаОрганизацииКонтр.Документ.Метаданные().Реквизиты.Найти("ВидВходящегоДокумента") <> Неопределено
						И ЗначениеЗаполнено(СтрокаОрганизацииКонтр.Документ.ВидВходящегоДокумента) Тогда 
					РегистраторПредставлениеКонтр = ФормированиеПечатныхФорм.ПолучитьПредставлениеВходящегоДокумента(СтрокаОрганизацииКонтр.Документ)
				Иначе 
					РегистраторПредставлениеКонтр =  СтрокаОрганизацииКонтр.Документ.Метаданные().Синоним +" " 
																	+ СокрЛП(СтрокаОрганизации.Документ.Номер) + " от " 
																	+  Формат(СтрокаОрганизацииКонтр.Документ.Дата, "ДФ=dd.MM.yyyy");
				КонецЕсли;    
			КонецЕсли;		

			ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = РегистраторПредставлениеКонтр;	

			ОбластьОбороты.Параметры.ДатаДокументаКонтр = Формат(СтрокаОрганизацииКонтр.Дата,"ЧЦ=21; ЧДЦ=2; ДФ=dd.MM.yy");
		Иначе
			ОбластьОбороты.Параметры.СуммаОборотДтКонтр = "";
			ОбластьОбороты.Параметры.СуммаОборотКтКонтр = "";
			ОбластьОбороты.Параметры.РегистраторПредставлениеКонтр = "";
			ОбластьОбороты.Параметры.ДатаДокументаКонтр = "";
		КонецЕсли;
		ТабДок.Вывести(ОбластьОбороты);
		
		//выведем подчиненные счета-фактуры, если имеются
		ДокументСФ      = Неопределено;
		ДокументСФКонтр = Неопределено;
		Выводить        = Ложь;
		Для Каждого СФ Из СписокДокументовСФ Цикл
			Если СтрокаОрганизации <> Неопределено Тогда
				ДокументСФ = ОбщегоНазначения.НайтиПодчиненныйДокумент(СтрокаОрганизации.Документ, СФ.Значение);
			КонецЕсли;  			
			Если СтрокаОрганизацииКонтр <> Неопределено Тогда
				ДокументСФКонтр = ОбщегоНазначения.НайтиПодчиненныйДокумент(СтрокаОрганизацииКонтр.Документ, СФ.Значение);
			КонецЕсли; 				
			Если ДокументСФ <> Неопределено Тогда
				Если СФ.Значение = "СчетФактураПолученный" Тогда
					Документ = Документы.СчетФактураПолученный.ПустаяСсылка().Метаданные().Синоним;
					Если ЗначениеЗаполнено(ДокументСФ.НомерВходящегоДокумента) Тогда
						Документ = Документ + " № вх. " + ДокументСФ.НомерВходящегоДокумента;
					КонецЕсли;
					Если ЗначениеЗаполнено(ДокументСФ.ДатаВходящегоДокумента) Тогда
						Документ = Документ + " от " + Формат(ДокументСФ.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy");
					КонецЕсли;
				ИначеЕсли СФ.Значение = "СчетФактураВыданный" Тогда
					Документ = Документы.СчетФактураВыданный.ПустаяСсылка().Метаданные().Синоним;
					Если ЗначениеЗаполнено(ДокументСФ.Номер) Тогда
						Документ = Документ + " № вх. " + ДокументСФ.Номер;
					КонецЕсли;
					Если ЗначениеЗаполнено(ДокументСФ.Дата) Тогда
						Документ = Документ + " от " + Формат(ДокументСФ.Дата, "ДФ=dd.MM.yyyy");
					КонецЕсли;
				ИначеЕсли ДокументСФКонтр <> Неопределено Тогда 
						Документ = ДокументСФ.Метаданные().Синоним +" " 
								   + СокрЛП(СтрокаОрганизации.Документ.Номер) + " от " 
								   + Формат(ДокументСФКонтр.Дата, "ДФ=dd.MM.yyyy");

				КонецЕсли;
				ОбластьСФ.Параметры.ДокументСФ = Документ;
				ОбластьСФ.Параметры.РасшифровкаСФ = ДокументСф;
				Выводить = Истина;
			КонецЕсли;
			Если ДокументСФКонтр <> Неопределено Тогда
				Выводить = Истина; 				
				Если СФ.Значение = "СчетФактураПолученный" Тогда
					Документ = Документы.СчетФактураПолученный.ПустаяСсылка().Метаданные().Синоним;
					Если ЗначениеЗаполнено(ДокументСФКонтр.НомерВходящегоДокумента) Тогда
						Документ = Документ + " № вх. " + ДокументСФКонтр.НомерВходящегоДокумента;
					КонецЕсли;
					Если ЗначениеЗаполнено(ДокументСФКонтр.ДатаВходящегоДокумента) Тогда
						Документ = Документ + " от " + Формат(ДокументСФКонтр.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy");
					КонецЕсли;
				Иначе
					Документ = ДокументСФКонтр.Метаданные().Синоним +" " 
							   + СокрЛП(СтрокаОрганизации.Документ.Номер) + " от " 
							   + Формат(ДокументСФКонтр.Дата, "ДФ=dd.MM.yyyy");

				КонецЕсли;     
				ОбластьСФ.Параметры.ДокументСФКонтр = Документ;
				ОбластьСФ.Параметры.РасшифровкаСФКонтр = ДокументСфКонтр;
			КонецЕсли; 
		КонецЦикла;
		
		Если Выводить Тогда
			ТабДок.Вывести(ОбластьСФ);
		КонецЕсли;   	
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
		
	Если Не СверкаСогласована Тогда
		НачальныйНомер = 1;
		Для Итерация = 1 По 5 Цикл
			ТабДок.Вывести(ОбластьПустаяСтрока);
			НачальныйНомер = НачальныйНомер + 1;
		КонецЦикла;		
	КонецЕсли;  	

	ОбластьОборотыИтог.Параметры.СуммаОборотДт      = ИтСуммаОборотДт;
	ОбластьОборотыИтог.Параметры.СуммаОборотКт      = ИтСуммаОборотКт;
	Если СверкаСогласована тогда
		ОбластьОборотыИтог.Параметры.СуммаОборотДтКонтр = ИтСуммаОборотДтКонтр;
		ОбластьОборотыИтог.Параметры.СуммаОборотКтКонтр = ИтСуммаОборотКтКонтр;
	КонецЕсли;
	ТабДок.Вывести(ОбластьОборотыИтог);
	
	ОбластьКонОстатки.Параметры.ДатаОкончания = Формат(ДатаОкончания, "ДЛФ=DD");
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = КонОстДебет;
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = КонОстКредит;
	
	Если СверкаСогласована тогда
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДтКонтр = КонОстДебетК;
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКтКонтр = КонОстКредитК;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьКонОстатки);
	
	// Результаты сверки
	
   	Если ПоДаннымОрганизации.Количество() = 0 Тогда
   	    РезультатыСверки = "<сверка не проведена>";
  	ИначеЕсли Не ЗначениеЗаполнено(ДатаОкончания) Тогда
   	    РезультатыСверки = "<не указана дата сверки>";
   	ИначеЕсли Не ЗначениеЗаполнено(Контрагент) Тогда
   	    РезультатыСверки = "<не указан контрагент>";
   	Иначе
		РезультатыСверки = "на " + Формат(ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
			
	   	Если ОстатокНаКонец > 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + строка(ВалютаДокумента);
	
	   	ИначеЕсли ОстатокНаКонец < 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(-ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " + строка(ВалютаДокумента);
	
	   	Иначе
	   		РезультатыСверки = РезультатыСверки + "отсутствует.";
	   	КонецЕсли;
	КонецЕсли;
	ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки;
	
	Если СверкаСогласована тогда
		ОбластьПодвал.Параметры.ПоДаннымКонтрагента = "По данным " + СокрЛП(НаименованиеКонтрагента);
		
	   	Если ПоДаннымКонтрагента.Количество() = 0 Тогда
	   	    РезультатыСверки = "<сверка не проведена>";
	  	ИначеЕсли Не ЗначениеЗаполнено(ДатаОкончания) Тогда
	   	    РезультатыСверки = "<не указана дата сверки>";
	   	ИначеЕсли Не ЗначениеЗаполнено(Контрагент) Тогда
	   	    РезультатыСверки = "<не указан контрагент>";
	   	Иначе
			РезультатыСверки = "на " + Формат(ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
				
		   	Если ОстатокНаКонецК < 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НазваниеОрганизации) + " " + Формат(-ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " + строка(ВалютаДокумента);
		
		   	ИначеЕсли ОстатокНаКонецК > 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + СокрЛП(НаименованиеКонтрагента) + " " + Формат(ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " + строка(ВалютаДокумента);
		
		   	Иначе
		   		РезультатыСверки = РезультатыСверки + "отсутствует.";
		   	КонецЕсли;
	   	КонецЕсли;
		
		ОбластьПодвал.Параметры.РезультатыСверкиК = РезультатыСверки;
		
		Если ОстатокНаКонец+ОстатокНаКонецК<>0 Тогда
			 ИтогСверки = "В результате сверки выявлено расхождение информации о состоянии расчетов в размере "+Формат(?(ОстатокНаКонец+ОстатокНаКонецК>0,1,-1)*(ОстатокНаКонец+ОстатокНаКонецК), "ЧЦ=21; ЧДЦ=2") +" "+ Строка(ВалютаДокумента);
			 ОбластьПодвал.Параметры.ИтогСверки = Символы.ПС+ ИтогСверки+Символы.ПС+" ";
		КонецЕсли; 
	КонецЕсли;
	
	ОбластьПодвал.Параметры.ТекстРНН_БИН_Организации = СокрЛП(ТекстРНН_БИН_Организации);
	ОбластьПодвал.Параметры.ТекстРНН_БИН_Контрагента = СокрЛП(ТекстРНН_БИН_Контрагента);
	
	ОбластьПодвал.Параметры.НазваниеОрганизации     = СокрЛП(НазваниеОрганизации);
	ОбластьПодвал.Параметры.ОрганизацияРНН_БИН      = СокрЛП(ОрганизацияРНН_БИН);
	ОбластьПодвал.Параметры.НаименованиеКонтрагента = СокрЛП(НаименованиеКонтрагента);
	ОбластьПодвал.Параметры.КонтрагентРНН_БИН       = СокрЛП(КонтрагентРНН_БИН);
	
	ОбластьПодвал.Параметры.Должность = ?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Должность),"________________",ДанныеПредставителяОрганизации.Должность);
	ОбластьПодвал.Параметры.ДолжностьК = ?(Не ЗначениеЗаполнено(ПредставительКонтрагента.Должность),"________________",ПредставительКонтрагента.Должность);
	
	ОбластьПодвал.Параметры.ФИОПредставителя  = "("+?(Не ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Представление),"_______________________",ДанныеПредставителяОрганизации.Представление)+")";
	ОбластьПодвал.Параметры.ФИОПредставителяК = "("+?(Не ЗначениеЗаполнено(ПредставительКонтрагента),"_______________________",ПредставительКонтрагента)+")";
	
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.АвтоМасштаб = Истина;
	
	Возврат ТабДок;	  	

КонецФункции
