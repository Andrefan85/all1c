Перем Макет;
Перем ТЗ, ТЗИтоги, ТЗИтогиПоСтранице;
Перем Таб;
Перем КоличествоКолонокФиксированных, КоличествоКолонокСДнями;
Перем СЗ_КолонкиГруппы;
Перем СЗ_КолонкиФиксированные;
Перем СЗ_КолонкиСДнями;

//---------------------------------------------------------------------------------------------------------------------------------

Функция МассивВСтрокуСЗапятыми(Мас)
	Стр = "";
	
	Для Каждого ЭлементМассива Из Мас Цикл
		Стр = Стр + ", " + ЭлементМассива;
	КонецЦикла;
	Если Стр <> "" Тогда
		Стр = Прав(Стр, СтрДлина(Стр)-2);
	КонецЕсли;	
	Возврат Стр;
КонецФункции	

//---------------------------------------------------------------------------------------------------------------------------------

Функция ПреобразоватьВР_в_ИдентификаторКолонки(ВР)
	
	СЗ = Новый СписокЗначений;
	Для сч = КодСимвола("а") По КодСимвола("я") Цикл
		СЗ.Добавить(сч);
	КонецЦикла;
	Для сч = КодСимвола("А") По КодСимвола("Я") Цикл
		СЗ.Добавить(сч);
	КонецЦикла;
	Для сч = КодСимвола("a") По КодСимвола("z") Цикл
		СЗ.Добавить(сч);
	КонецЦикла;
	Для сч = КодСимвола("A") По КодСимвола("Z") Цикл
		СЗ.Добавить(сч);
	КонецЦикла;
	
	Рез = "";
	Для сч = 1 По СтрДлина(ВР) Цикл
		ТекСимвол = Сред(ВР, сч, 1);
		Если СЗ.НайтиПоЗначению(КодСимвола(ТекСимвол)) <> Неопределено Тогда
			Рез = Рез + ТекСимвол;
		КонецЕсли;
	КонецЦикла;
	Возврат "ВР_" + Рез;
КонецФункции

//---------------------------------------------------------------------------------------------------------------------------------

Функция ПолучитьОтветственноеЛицо(ОтветственныеЛицаОрганизаций)
	Запрос = Новый Запрос;
		
	// Установим параметры запроса	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ПериодРегистрации);
	Запрос.УстановитьПараметр("ОтветственныеЛицаОрганизаций", ОтветственныеЛицаОрганизаций);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование КАК ФИО,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&Период,
	|			ОтветственноеЛицо = &ОтветственныеЛицаОрганизаций
	|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
КонецФункции

//---------------------------------------------------------------------------------------------------------------------------------

Функция ПолучитьТекстЗапроса()
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
	|ПОМЕСТИТЬ Периоды
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение КАК Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация КАК ГоловнаяОрганизация,
	|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяССылка) КАК ПодразделениеОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяССылка) КАК Должность
	|ПОМЕСТИТЬ НеСотрудники
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|		ПО (ДоговорНаВыполнениеРаботСФизЛицом.Проведен)
	|			И ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = ДоговорНаВыполнениеРаботСФизЛицом.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|ГДЕ
	|	РаботникиОрганизаций.Сотрудник ЕСТЬ NULL 
	|	И ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник ЕСТЬ NULL 
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	|	ДополнительныеНачисленияРаботниковОрганизаций.Организация,
	|	НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ),
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяССылка),
	|	ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяССылка)
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|		ПО (ДоговорНаВыполнениеРаботСФизЛицом.Проведен)
	|			И ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо = ДоговорНаВыполнениеРаботСФизЛицом.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|ГДЕ
	|	РаботникиОрганизаций.Сотрудник ЕСТЬ NULL 
	|	И ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник ЕСТЬ NULL 
	|	И ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДатыПоследнихДвижений.ПериодРегистрации КАК ПериодРегистрации,
	|	ДатыПоследнихДвижений.Физлицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА ДатыПоследнихДвижений.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ДатыПоследнихДвижений.Организация
	|		ИНАЧЕ ДатыПоследнихДвижений.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ДатыПоследнихДвижений.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Работающие.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА Работающие.ПериодЗавершения <= КОНЕЦПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ)
	|							И Работающие.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА Работающие.ПодразделениеОрганизацииЗавершения
	|					ИНАЧЕ Работающие.ПодразделениеОрганизации
	|				КОНЕЦ
	|		КОГДА Уволенные.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА Уволенные.ПериодЗавершения <= КОНЕЦПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ)
	|							И Уволенные.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА Уволенные.ПодразделениеОрганизацииЗавершения
	|					ИНАЧЕ Уволенные.ПодразделениеОрганизации
	|				КОНЕЦ
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Работающие.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА Работающие.ПериодЗавершения <= КОНЕЦПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ)
	|							И Работающие.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА Работающие.ДолжностьЗавершения
	|					ИНАЧЕ Работающие.Должность
	|				КОНЕЦ
	|		КОГДА Уволенные.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА Уволенные.ПериодЗавершения <= КОНЕЦПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ)
	|							И Уволенные.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА Уволенные.ДолжностьЗавершения
	|					ИНАЧЕ Уволенные.Должность
	|				КОНЕЦ
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА Работающие.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА Работающие.ПериодЗавершения <= КОНЕЦПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ)
	|							И Работающие.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							И Работающие.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|						ТОГДА Работающие.ПериодЗавершения
	|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|				КОНЕЦ
	|		КОГДА Уволенные.Сотрудник ЕСТЬ НЕ NULL 
	|				И Работающие.Сотрудник ЕСТЬ NULL 
	|			ТОГДА Уволенные.Период
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаУвольнения,
	|	ВЫБОР
	|		КОГДА Работающие.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА Работающие.Сотрудник
	|		КОГДА Уволенные.Сотрудник ЕСТЬ НЕ NULL 
	|				И Работающие.Сотрудник ЕСТЬ NULL 
	|			ТОГДА Уволенные.Сотрудник
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Сотрудник
	|ПОМЕСТИТЬ Работники
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ПериодРегистрации КАК ПериодРегистрации,
	|		МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|		РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|		ВЫБОР
	|			КОГДА РаботникиОрганизаций.ПериодЗавершения <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ)
	|					И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|		КОНЕЦ КАК Организация
	|	ИЗ
	|		Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
	|	ГДЕ
	|		РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ПериодРегистрации,
	|		РаботникиОрганизаций.Сотрудник.Физлицо,
	|		ВЫБОР
	|			КОГДА РаботникиОрганизаций.ПериодЗавершения <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ)
	|					И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|		КОНЕЦ) КАК ДатыПоследнихДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работающие
	|		ПО ДатыПоследнихДвижений.Физлицо = Работающие.Сотрудник.Физлицо
	|			И ДатыПоследнихДвижений.Период = Работающие.Период
	|			И (Работающие.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|			И (Работающие.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (ДатыПоследнихДвижений.Организация = ВЫБОР
	|				КОГДА Работающие.ПериодЗавершения <= КОНЕЦПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ)
	|						И Работающие.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА Работающие.ОбособленноеПодразделениеЗавершения
	|				ИНАЧЕ Работающие.ОбособленноеПодразделение
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Уволенные
	|		ПО ДатыПоследнихДвижений.Физлицо = Уволенные.Сотрудник.Физлицо
	|			И ДатыПоследнихДвижений.Период = Уволенные.Период
	|			И (Уволенные.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|			И (Уволенные.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (ДатыПоследнихДвижений.Организация = ВЫБОР
	|				КОГДА Уволенные.ПериодЗавершения <= КОНЕЦПЕРИОДА(ДатыПоследнихДвижений.ПериодРегистрации, МЕСЯЦ)
	|						И Уволенные.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА Уволенные.ОбособленноеПодразделениеЗавершения
	|				ИНАЧЕ Уволенные.ОбособленноеПодразделение
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Договор.ПериодРегистрации,
	|	Договор.Организация,
	|	Договор.Физлицо,
	|	Договор.Должность КАК Должность,
	|	Договор.ГоловнаяОрганизация,
	|	ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации,
	|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания,
	|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник
	|ПОМЕСТИТЬ Договорники
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДатыПоследнихДоговоров.ПериодРегистрации КАК ПериодРегистрации,
	|		ДатыПоследнихДоговоров.Организация КАК Организация,
	|		ДатыПоследнихДоговоров.Физлицо КАК Физлицо,
	|		ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка) КАК Должность,
	|		ВЫБОР
	|			КОГДА ДоговорНаВыполнениеРаботСФизЛицом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ДоговорНаВыполнениеРаботСФизЛицом.Организация
	|			ИНАЧЕ ДоговорНаВыполнениеРаботСФизЛицом.Организация.ГоловнаяОрганизация
	|		КОНЕЦ КАК ГоловнаяОрганизация,
	|		МАКСИМУМ(ДоговорНаВыполнениеРаботСФизЛицом.Ссылка) КАК Ссылка
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Договора.Физлицо КАК Физлицо,
	|			Договора.Организация КАК Организация,
	|			МАКСИМУМ(Договора.ДатаНачала) КАК ДатаНачала,
	|			Периоды.ПериодРегистрации КАК ПериодРегистрации
	|		ИЗ
	|			Периоды КАК Периоды
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ДоговорНаВыполнениеРаботСФизЛицом.ФизЛицо КАК Физлицо,
	|					ДоговорНаВыполнениеРаботСФизЛицом.Организация КАК Организация,
	|					ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала КАК ДатаНачала,
	|					ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания КАК ДатаОкончания
	|				ИЗ
	|					Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|				ГДЕ
	|					ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала <= &КонецПериода
	|					И ДоговорНаВыполнениеРаботСФизЛицом.Проведен) КАК Договора
	|				ПО (Договора.ДатаНачала <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Договора.Физлицо,
	|			Договора.Организация,
	|			Периоды.ПериодРегистрации) КАК ДатыПоследнихДоговоров
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|			ПО ДатыПоследнихДоговоров.Физлицо = ДоговорНаВыполнениеРаботСФизЛицом.ФизЛицо
	|				И ДатыПоследнихДоговоров.Организация = ДоговорНаВыполнениеРаботСФизЛицом.Организация
	|				И ДатыПоследнихДоговоров.ДатаНачала = ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДатыПоследнихДоговоров.Физлицо,
	|		ДатыПоследнихДоговоров.Организация,
	|		ДатыПоследнихДоговоров.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА ДоговорНаВыполнениеРаботСФизЛицом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ДоговорНаВыполнениеРаботСФизЛицом.Организация
	|			ИНАЧЕ ДоговорНаВыполнениеРаботСФизЛицом.Организация.ГоловнаяОрганизация
	|		КОНЕЦ) КАК Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|		ПО Договор.Ссылка = ДоговорНаВыполнениеРаботСФизЛицом.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Работники.ПериодРегистрации КАК ПериодРегистрации,
	|	Работники.Физлицо КАК Физлицо,
	|	Работники.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Работники.Организация КАК Организация,
	|	Работники.Подразделение КАК Подразделение,
	|	Работники.Должность КАК Должность,
	|	Работники.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ДанныеОРабочемМесте
	|ИЗ
	|	Работники КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Договорники КАК Договорники
	|		ПО Работники.Физлицо = Договорники.Физлицо
	|			И Работники.ГоловнаяОрганизация = Договорники.ГоловнаяОрганизация
	|			И Работники.ПериодРегистрации = Договорники.ПериодРегистрации
	|ГДЕ
	|	(Работники.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ Работники.ДатаУвольнения > Работники.ПериодРегистрации
	|			ИЛИ Договорники.Физлицо ЕСТЬ NULL 
	|			ИЛИ Договорники.ДатаОкончания < Работники.ДатаУвольнения)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Договорники.ПериодРегистрации,
	|	Договорники.Физлицо,
	|	Договорники.ГоловнаяОрганизация,
	|	Договорники.Организация,
	|	Договорники.ПодразделениеОрганизации,
	|	Договорники.Должность,
	|	Договорники.Сотрудник
	|ИЗ
	|	Договорники КАК Договорники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Работники КАК Работники
	|		ПО Договорники.Физлицо = Работники.Физлицо
	|			И Договорники.ГоловнаяОрганизация = Работники.ГоловнаяОрганизация
	|			И Договорники.ПериодРегистрации = Работники.ПериодРегистрации
	|ГДЕ
	|	(Работники.ДатаУвольнения ЕСТЬ NULL 
	|			ИЛИ Работники.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И Договорники.ДатаОкончания > Работники.ДатаУвольнения
	|				И Работники.ДатаУвольнения <= Работники.ПериодРегистрации)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НеСотрудники.ПериодРегистрации,
	|	НеСотрудники.ФизЛицо,
	|	НеСотрудники.ГоловнаяОрганизация,
	|	НеСотрудники.Организация,
	|	НеСотрудники.ПодразделениеОрганизации,
	|	НеСотрудники.Должность,
	|	МАКСИМУМ(НеСотрудники.Сотрудник)
	|ИЗ
	|	НеСотрудники КАК НеСотрудники
	|
	|СГРУППИРОВАТЬ ПО
	|	НеСотрудники.ПериодРегистрации,
	|	НеСотрудники.ФизЛицо,
	|	НеСотрудники.ГоловнаяОрганизация,
	|	НеСотрудники.Организация,
	|	НеСотрудники.ПодразделениеОрганизации,
	|	НеСотрудники.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подзапрос.Организация КАК Организация,
	|	Подзапрос.ФизЛицо КАК ФизЛицо,
	|	Подзапрос.ИмяВидаРасчета КАК ИмяВидаРасчета,
	|	Подзапрос.ПриоритетВидаРасчета КАК ПриоритетВидаРасчета,
	|	Подзапрос.Группа КАК Группа,
	|	Подзапрос.ПриоритетГруппы КАК ПриоритетГруппы,
	|	Подзапрос.ОтработаноДней КАК ОтработаноДней,
	|	Подзапрос.ОтработаноЧасов КАК ОтработаноЧасов,
	|	Подзапрос.НормаДней,
	|	Подзапрос.НормаЧасов,
	|	Подзапрос.ОплаченоДней,
	|	Подзапрос.ОплаченоЧасов,
	|	Подзапрос.Результат КАК Результат,
	|	Подзапрос.ПериодРегистрации,
	|	Подзапрос.Регистратор,
	|	Подзапрос.Ведомость,
	|	ЕСТЬNULL(ДанныеОРабочемМесте.Подразделение, """") КАК Подразделение,
	|	ЕСТЬNULL(ДанныеОРабочемМесте.Должность, """") КАК Должность
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение КАК Организация,
	|		ОсновныеНачисленияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|		ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование КАК ИмяВидаРасчета,
	|		""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Код КАК ПриоритетВидаРасчета,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ""ГруппаДоходыВНатуральнойФорме""
	|			ИНАЧЕ ""ГруппаВсегоНачислено""
	|		КОНЕЦ КАК Группа,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА 3
	|			ИНАЧЕ 2
	|		КОНЕЦ КАК ПриоритетГруппы,
	|		ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней КАК ОтработаноДней,
	|		ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов КАК ОтработаноЧасов,
	|		ОсновныеНачисленияРаботниковОрганизации.НормаДней КАК НормаДней,
	|		ОсновныеНачисленияРаботниковОрганизации.НормаЧасов КАК НормаЧасов,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|				ТОГДА ОсновныеНачисленияРаботниковОрганизации.ОплаченоДнейЧасов
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ОплаченоДней,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидУчетаВремени <> ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|				ТОГДА ОсновныеНачисленияРаботниковОрганизации.ОплаченоДнейЧасов
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ОплаченоЧасов,
	|		ОсновныеНачисленияРаботниковОрганизации.Результат КАК Результат,
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации КАК ПериодРегистрации,
	|		ОсновныеНачисленияРаботниковОрганизации.Регистратор КАК Регистратор,
	|		НЕОПРЕДЕЛЕНО КАК Ведомость,
	|		ОсновныеНачисленияРаботниковОрганизации.Организация КАК ГоловнаяОрганизация
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизации
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|		И ОсновныеНачисленияРаботниковОрганизации.Результат <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение,
	|		ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо,
	|		ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование,
	|		""Б"" + ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.Код,
	|		ВЫБОР
	|			КОГДА ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА ""ГруппаДоходыВНатуральнойФорме""
	|			ИНАЧЕ ""ГруппаВсегоНачислено""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				ТОГДА 3
	|			ИНАЧЕ 2
	|		КОНЕЦ,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ВЫБОР
	|			КОГДА ДополнительныеНачисленияРаботниковОрганизации.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|				ТОГДА ДополнительныеНачисленияРаботниковОрганизации.ОплаченоДнейЧасов
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДополнительныеНачисленияРаботниковОрганизации.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам)
	|				ТОГДА ДополнительныеНачисленияРаботниковОрганизации.ОплаченоДнейЧасов
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ДополнительныеНачисленияРаботниковОрганизации.Результат,
	|		НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации, МЕСЯЦ),
	|		ДополнительныеНачисленияРаботниковОрганизации.Регистратор,
	|		НЕОПРЕДЕЛЕНО,
	|		ДополнительныеНачисленияРаботниковОрганизации.Организация
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизации
	|	ГДЕ
	|		ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|		И ДополнительныеНачисленияРаботниковОрганизации.Результат <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДФЛСведенияОДоходах.ОбособленноеПодразделение,
	|		НДФЛСведенияОДоходах.ФизЛицо,
	|		""Мат. выгода по займам (кредитам)"",
	|		""Матвыгода"",
	|		""ГруппаДоходыВНатуральнойФорме"",
	|		3,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		НДФЛСведенияОДоходах.СуммаДохода,
	|		НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.Период, МЕСЯЦ),
	|		НДФЛСведенияОДоходах.Регистратор,
	|		НЕОПРЕДЕЛЕНО,
	|		НДФЛСведенияОДоходах.Организация
	|	ИЗ
	|		РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|	ГДЕ
	|		НДФЛСведенияОДоходах.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И (НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2610ПоСтавке13)
	|				ИЛИ НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2610ПоСтавке35))
	|		И НДФЛСведенияОДоходах.ИсчисленоИзЗарплаты
	|		И НДФЛСведенияОДоходах.ОбособленноеПодразделение = &Организация
	|		И НДФЛСведенияОДоходах.СуммаДохода <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УдержанияРаботниковОрганизации.ОбособленноеПодразделение,
	|		УдержанияРаботниковОрганизации.ФизЛицо,
	|		УдержанияРаботниковОрганизации.ВидРасчета.Наименование,
	|		""А"" + УдержанияРаботниковОрганизации.ВидРасчета.Код,
	|		""ГруппаВсегоУдержано"",
	|		4,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		УдержанияРаботниковОрганизации.Результат,
	|		УдержанияРаботниковОрганизации.ПериодРегистрации,
	|		УдержанияРаботниковОрганизации.Регистратор,
	|		НЕОПРЕДЕЛЕНО,
	|		УдержанияРаботниковОрганизации.Организация
	|	ИЗ
	|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|		И УдержанияРаботниковОрганизации.Результат <> 0
	|		И УдержанияРаботниковОрганизации.ОбособленноеПодразделение = &Организация
	|		И УдержанияРаботниковОрганизации.Результат <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		""НДФЛ"",
	|		""НДФЛ"",
	|		""ГруппаВсегоУдержано"",
	|		4,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		НДФЛРасчетыСБюджетом.Налог,
	|		НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ),
	|		НДФЛРасчетыСБюджетом.Регистратор,
	|		НЕОПРЕДЕЛЕНО,
	|		НДФЛРасчетыСБюджетом.Организация
	|	ИЗ
	|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
	|		И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|		И НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
	|		И НДФЛРасчетыСБюджетом.Налог <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПогашениеЗаймовРаботникамиОрганизаций.Организация,
	|		ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо,
	|		""Погашение займа"",
	|		""ПогашениеЗайма"",
	|		""ГруппаВсегоУдержано"",
	|		4,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты,
	|		НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботникамиОрганизаций.Период, МЕСЯЦ),
	|		ПогашениеЗаймовРаботникамиОрганизаций.Регистратор,
	|		НЕОПРЕДЕЛЕНО,
	|		ВЫБОР
	|			КОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация
	|			ИНАЧЕ ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
	|	ГДЕ
	|		ПогашениеЗаймовРаботникамиОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ПогашениеЗаймовРаботникамиОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ПогашениеЗаймовРаботникамиОрганизаций.УдержаноИзЗарплаты
	|		И ПогашениеЗаймовРаботникамиОрганизаций.Организация = &Организация
	|		И ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Взаиморасчеты.Организация,
	|		Взаиморасчеты.Физлицо,
	|		ВЫБОР
	|			КОГДА Взаиморасчеты.СпособВыплаты = ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыЗарплаты.ЧерезКассу)
	|					И (НЕ Взаиморасчеты.Регистратор ССЫЛКА Документ.ДепонированиеОрганизаций)
	|				ТОГДА ""Касса""
	|			КОГДА Взаиморасчеты.СпособВыплаты = ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыЗарплаты.ЧерезБанк)
	|					И (НЕ Взаиморасчеты.Регистратор ССЫЛКА Документ.ДепонированиеОрганизаций)
	|				ТОГДА ""Банк""
	|			КОГДА Взаиморасчеты.Регистратор ССЫЛКА Документ.ДепонированиеОрганизаций
	|				ТОГДА ""Задепонировано""
	|			ИНАЧЕ ""Способ выплаты не указан""
	|		КОНЕЦ,
	|		""А"",
	|		""ГруппаВсегоВыплачено"",
	|		5,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		Взаиморасчеты.СуммаВзаиморасчетов,
	|		НАЧАЛОПЕРИОДА(Взаиморасчеты.Период, МЕСЯЦ),
	|		Взаиморасчеты.Регистратор,
	|		Взаиморасчеты.Ведомость,
	|		ВЫБОР
	|			КОГДА Взаиморасчеты.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА Взаиморасчеты.Организация
	|			ИНАЧЕ Взаиморасчеты.Организация.ГоловнаяОрганизация
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК Взаиморасчеты
	|	ГДЕ
	|		Взаиморасчеты.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Взаиморасчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Взаиморасчеты.СуммаВзаиморасчетов <> 0
	|		И Взаиморасчеты.Организация = &Организация
	|		И Взаиморасчеты.СуммаВзаиморасчетов <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СальдоПоПериодам.Организация,
	|		СальдоПоПериодам.Физлицо,
	|		""Начальное сальдо"",
	|		""А"",
	|		""ГруппаНачальноеСальдо"",
	|		1,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		СУММА(СальдоПоПериодам.Результат),
	|		СальдоПоПериодам.Период,
	|		NULL,
	|		НЕОПРЕДЕЛЕНО,
	|		ВЫБОР
	|			КОГДА СальдоПоПериодам.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА СальдоПоПериодам.Организация
	|			ИНАЧЕ СальдоПоПериодам.Организация.ГоловнаяОрганизация
	|		КОНЕЦ
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Периоды.Период КАК Период,
	|			Сальдо.Физлицо КАК Физлицо,
	|			Сальдо.Организация КАК Организация,
	|			СУММА(Сальдо.СуммаВзаиморасчетовОстаток) КАК Результат
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				МИНИМУМ(НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ПериодРегистрации, МЕСЯЦ)) КАК Период
	|			ИЗ
	|				Периоды КАК РегламентированныйПроизводственныйКалендарь
	|			ГДЕ
	|				РегламентированныйПроизводственныйКалендарь.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|				И (НЕ &ЕстьГруппировкаПоПериодуРегистрации)
	|			
	|			ИМЕЮЩИЕ
	|				МИНИМУМ(НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ПериодРегистрации, МЕСЯЦ)) ЕСТЬ НЕ NULL 
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ПериодРегистрации, МЕСЯЦ)
	|			ИЗ
	|				Периоды КАК РегламентированныйПроизводственныйКалендарь
	|			ГДЕ
	|				РегламентированныйПроизводственныйКалендарь.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|				И &ЕстьГруппировкаПоПериодуРегистрации) КАК Периоды
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация КАК Организация,
	|					&НачалоПериода КАК Период,
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо КАК Физлицо,
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(&НачалоПериода, ) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация,
	|					ДОБАВИТЬКДАТЕ(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, МЕСЯЦ, 1),
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо,
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовОборот
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Обороты(&НачалоПериода, &КонецПериода, Месяц, ) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					НДФЛКЗачету.Организация,
	|					&НачалоПериода,
	|					НДФЛКЗачету.ФизЛицо,
	|					НДФЛКЗачету.СуммаНДФЛКЗачетуОстаток
	|				ИЗ
	|					РегистрНакопления.НДФЛКЗачету.Остатки(&НачалоПериода, ) КАК НДФЛКЗачету
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					НДФЛКЗачету.Организация,
	|					ДОБАВИТЬКДАТЕ(НДФЛКЗачету.Период, МЕСЯЦ, 1),
	|					НДФЛКЗачету.ФизЛицо,
	|					НДФЛКЗачету.СуммаНДФЛКЗачетуОборот
	|				ИЗ
	|					РегистрНакопления.НДФЛКЗачету.Обороты(&НачалоПериода, &КонецПериода, Месяц, ) КАК НДФЛКЗачету) КАК Сальдо
	|				ПО (Сальдо.Период <= Периоды.Период)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Сальдо.Организация,
	|			Сальдо.Физлицо,
	|			Периоды.Период) КАК СальдоПоПериодам
	|	ГДЕ
	|		(НЕ СальдоПоПериодам.Физлицо ЕСТЬ NULL )
	|		И СальдоПоПериодам.Организация = &Организация
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СальдоПоПериодам.Период,
	|		СальдоПоПериодам.Организация,
	|		СальдоПоПериодам.Физлицо,
	|		ВЫБОР
	|			КОГДА СальдоПоПериодам.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА СальдоПоПериодам.Организация
	|			ИНАЧЕ СальдоПоПериодам.Организация.ГоловнаяОрганизация
	|		КОНЕЦ
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(СальдоПоПериодам.Результат) <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СальдоПоПериодам.Организация,
	|		СальдоПоПериодам.Физлицо,
	|		""Конечное сальдо"",
	|		""Я"",
	|		""ГруппаКонечноеСальдо"",
	|		6,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		СУММА(СальдоПоПериодам.СуммаВзаиморасчетовКонечныйОстаток),
	|		СальдоПоПериодам.Период,
	|		NULL,
	|		НЕОПРЕДЕЛЕНО,
	|		ВЫБОР
	|			КОГДА СальдоПоПериодам.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА СальдоПоПериодам.Организация
	|			ИНАЧЕ СальдоПоПериодам.Организация.ГоловнаяОрганизация
	|		КОНЕЦ
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Периоды.Период КАК Период,
	|			Сальдо.Физлицо КАК Физлицо,
	|			Сальдо.Организация КАК Организация,
	|			СУММА(Сальдо.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовКонечныйОстаток
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ПериодРегистрации, МЕСЯЦ) КАК Период
	|			ИЗ
	|				Периоды КАК РегламентированныйПроизводственныйКалендарь
	|			ГДЕ
	|				РегламентированныйПроизводственныйКалендарь.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|				И &ЕстьГруппировкаПоПериодуРегистрации
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				МАКСИМУМ(НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ПериодРегистрации, МЕСЯЦ))
	|			ИЗ
	|				Периоды КАК РегламентированныйПроизводственныйКалендарь
	|			ГДЕ
	|				РегламентированныйПроизводственныйКалендарь.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|				И (НЕ &ЕстьГруппировкаПоПериодуРегистрации)
	|			
	|			ИМЕЮЩИЕ
	|				МАКСИМУМ(НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ПериодРегистрации, МЕСЯЦ)) ЕСТЬ НЕ NULL ) КАК Периоды
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация КАК Организация,
	|					&НачалоПериода КАК Период,
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо КАК Физлицо,
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(&НачалоПериода, ) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация,
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период,
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо,
	|					ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовОборот
	|				ИЗ
	|					РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Обороты(&НачалоПериода, &КонецПериода, Месяц, ) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					НДФЛКЗачету.Организация,
	|					&НачалоПериода,
	|					НДФЛКЗачету.ФизЛицо,
	|					НДФЛКЗачету.СуммаНДФЛКЗачетуОстаток
	|				ИЗ
	|					РегистрНакопления.НДФЛКЗачету.Остатки(&НачалоПериода, ) КАК НДФЛКЗачету
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					НДФЛКЗачету.Организация,
	|					НДФЛКЗачету.Период,
	|					НДФЛКЗачету.ФизЛицо,
	|					НДФЛКЗачету.СуммаНДФЛКЗачетуОборот
	|				ИЗ
	|					РегистрНакопления.НДФЛКЗачету.Обороты(&НачалоПериода, &КонецПериода, Месяц, ) КАК НДФЛКЗачету) КАК Сальдо
	|				ПО (Сальдо.Период <= Периоды.Период)
	|		ГДЕ
	|			(НЕ Сальдо.Физлицо ЕСТЬ NULL )
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Сальдо.Организация,
	|			Сальдо.Физлицо,
	|			Периоды.Период) КАК СальдоПоПериодам
	|	ГДЕ
	|		(НЕ СальдоПоПериодам.Физлицо ЕСТЬ NULL )
	|		И СальдоПоПериодам.Организация = &Организация
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СальдоПоПериодам.Период,
	|		СальдоПоПериодам.Организация,
	|		СальдоПоПериодам.Физлицо,
	|		ВЫБОР
	|			КОГДА СальдоПоПериодам.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА СальдоПоПериодам.Организация
	|			ИНАЧЕ СальдоПоПериодам.Организация.ГоловнаяОрганизация
	|		КОНЕЦ
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(СальдоПоПериодам.СуммаВзаиморасчетовКонечныйОстаток) <> 0) КАК Подзапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеОРабочемМесте КАК ДанныеОРабочемМесте
	|		ПО Подзапрос.Организация = ДанныеОРабочемМесте.Организация
	|			И Подзапрос.ФизЛицо = ДанныеОРабочемМесте.Физлицо
	|			И Подзапрос.ПериодРегистрации = ДанныеОРабочемМесте.ПериодРегистрации
	|ГДЕ
	|	&Условие
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	ПриоритетГруппы,
	|	ПриоритетВидаРасчета
	|ИТОГИ
	|	СУММА(ОтработаноДней),
	|	СУММА(ОтработаноЧасов),
	|	СУММА(Результат)
	|ПО
	|	ФизЛицо,
	|	Группа,
	|	ИмяВидаРасчета";
	
	ТекстУсловия = "";
	Если ОтборПодразделения.Количество() > 0 Тогда
		ТекстУсловия = "ДанныеОРабочемМесте.Подразделение в Иерархии(&МассивПодразделений)";
	КонецЕсли;
	
	Если ОтборФизлица.Количество() > 0 Тогда		
		ТекстУсловия = ?(ТекстУсловия<>"", ТекстУсловия + " и ", "") +  "Подзапрос.ФизЛицо в Иерархии(&МассивФизлиц)";
	КонецЕсли;
	
	Если ТекстУсловия = "" Тогда
		ТекстУсловия = "1=1";
	КонецЕсли;	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие",  ТекстУсловия);
	Возврат ТекстЗапроса;
КонецФункции

//---------------------------------------------------------------------------------------------------------------------------------

Процедура ВывестиШапкуТаблицы()
	// вывод шапки
	ОбластьШапкаНачало = Макет.ПолучитьОбласть("ШапкаТаблицы|Начало");
	ОбластьШапкаВР = Макет.ПолучитьОбласть("ШапкаТаблицы|ВР");
	ОбластьШапкаГруппаВР = Макет.ПолучитьОбласть("ШапкаТаблицы|ГруппаВР");
		
	Таб.Вывести(ОбластьШапкаНачало);
	Для сч = (КоличествоКолонокФиксированных + КоличествоКолонокСДнями) По ТЗ.Колонки.Количество()-1 Цикл
		КолонкаИмя = ТЗ.Колонки[сч].Имя;
		Если СЗ_КолонкиГруппы.НайтиПоЗначению(КолонкаИмя) = Неопределено Тогда // это вид расчета			
			Если (КолонкаИмя = "ВР_Начальноесальдо") или (КолонкаИмя = "ВР_Конечноесальдо") Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьШапкаВР.Параметры.ВР = ТЗ.Колонки[сч].Заголовок;
			Таб.Присоединить(ОбластьШапкаВР);
		Иначе // это группа расчетов
			ОбластьШапкаГруппаВР.Параметры.ГруппаВР = ТЗ.Колонки[сч].Заголовок;
			Таб.Присоединить(ОбластьШапкаГруппаВР);
		КонецЕсли;	
		
	КонецЦикла;
КонецПроцедуры

//---------------------------------------------------------------------------------------------------------------------------------

Процедура ВывестиИтоги(ПоСтранице)
	ОбластьИтогиНачало = Макет.ПолучитьОбласть("Итоги|Начало");
	ОбластьИтогиВР = Макет.ПолучитьОбласть("Итоги|ВР");
	ОбластьИтогиГруппаВР = Макет.ПолучитьОбласть("Итоги|ГруппаВР");
	
	
	ОбластьИтогиНачало.Параметры.ОтработаноДней = ?(ПоСтранице, ТЗИтогиПоСтранице.Итог("ОтработаноДней"), ТЗИтоги.Итог("ОтработаноДней"));
	ОбластьИтогиНачало.Параметры.ОтработаноЧасов = ?(ПоСтранице, ТЗИтогиПоСтранице.Итог("ОтработаноЧасов"), ТЗИтоги.Итог("ОтработаноЧасов"));
	ОбластьИтогиНачало.Параметры.Заголовок = ?(ПоСтранице = Истина, "Итого по по странице", "Итого по отчету");
	Таб.Вывести(ОбластьИтогиНачало);
	
	Для сч = (КоличествоКолонокФиксированных + КоличествоКолонокСДнями) По ТЗИтоги.Колонки.Количество()-1 Цикл
		КолонкаИмя = ТЗИтоги.Колонки[сч].Имя;
		Если СЗ_КолонкиГруппы.НайтиПоЗначению(КолонкаИмя) = Неопределено Тогда // это вид расчета
			Если (КолонкаИмя = "ВР_Начальноесальдо") или (КолонкаИмя = "ВР_Конечноесальдо") Тогда
				Продолжить;
			КонецЕсли;
		
			ОбластьИтогиВР.Параметры.СуммаВР = ?(ПоСтранице, ТЗИтогиПоСтранице.Итог(КолонкаИмя), ТЗИтоги.Итог(КолонкаИмя));
			Таб.Присоединить(ОбластьИтогиВР);
		Иначе // это группа расчетов
			ОбластьИтогиГруппаВР.Параметры.СуммаГруппаВР = ?(ПоСтранице, ТЗИтогиПоСтранице.Итог(КолонкаИмя), ТЗИтоги.Итог(КолонкаИмя));
			Таб.Присоединить(ОбластьИтогиГруппаВР);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПоСтранице Тогда
		ТЗИтогиПоСтранице.Очистить();
	КонецЕсли;	
КонецПроцедуры

//---------------------------------------------------------------------------------------------------------------------------------

Процедура ВывестиСтроку(СтрокаТЗ, Ном)
	ОбластьСтрокаНачало = Макет.ПолучитьОбласть("Строка|Начало");
	ОбластьСтрокаВР = Макет.ПолучитьОбласть("Строка|ВР");
	ОбластьСтрокаГруппаВР = Макет.ПолучитьОбласть("Строка|ГруппаВР");
		
	ОбластьСтрокаНачало.Параметры.Ном = Ном;
	ОбластьСтрокаНачало.Параметры.ФИО = СтрокаТЗ.ФизЛицо;
	ОбластьСтрокаНачало.Параметры.Должность = СтрокаТЗ.Должность;
	ОбластьСтрокаНачало.Параметры.Подразделение = СтрокаТЗ.Подразделение;
	ОбластьСтрокаНачало.Параметры.ОтработаноДней = СтрокаТЗ.ОтработаноДней;
	ОбластьСтрокаНачало.Параметры.ОтработаноЧасов = СтрокаТЗ.ОтработаноЧасов;
	
	ВыводимыеОбласти = Новый Массив;
	ВыводимыеОбласти.Добавить(ОбластьСтрокаНачало);
	
	
	Если Не Таб.ПроверитьВывод(ВыводимыеОбласти) Тогда
		ВывестиИтоги(Истина); // итоги по странице
		ВывестиОтветственныеЛица();
		Таб.ВывестиГоризонтальныйРазделительСтраниц();
		ВывестиШапкуТаблицы();		
	КонецЕсли;		
		
	Таб.Вывести(ОбластьСтрокаНачало);
	
	Для сч = (КоличествоКолонокФиксированных + КоличествоКолонокСДнями) По ТЗ.Колонки.Количество()-1 Цикл
		КолонкаИмя = ТЗ.Колонки[сч].Имя;
		Если СЗ_КолонкиГруппы.НайтиПоЗначению(КолонкаИмя) = Неопределено Тогда // это вид расчета
			Если (КолонкаИмя = "ВР_Начальноесальдо") или (КолонкаИмя = "ВР_Конечноесальдо") Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьСтрокаВР.Параметры.СуммаВР = СтрокаТЗ[КолонкаИмя];
			Таб.Присоединить(ОбластьСтрокаВР);
		Иначе // это группа расчетов
			ОбластьСтрокаГруппаВР.Параметры.СуммаГруппаВР = СтрокаТЗ[КолонкаИмя];
			Таб.Присоединить(ОбластьСтрокаГруппаВР);
		КонецЕсли;	
		
	КонецЦикла;
	
	НоваяСтрока = ТЗИтоги.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	
	НоваяСтрока = ТЗИтогиПоСтранице.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	
КонецПроцедуры		

//---------------------------------------------------------------------------------------------------------------------------------

Процедура ВывестиОтветственныеЛица()
	// ответственные лица
	ОтвЛицо = ПолучитьОтветственноеЛицо(Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	ОбластьОтветственныеЛица = Макет.ПолучитьОбласть("ОтветственныеЛица");
	ОбластьОтветственныеЛица.Параметры.Заполнить(ОтвЛицо);
	Таб.Вывести(ОбластьОтветственныеЛица);	
КонецПроцедуры	

//---------------------------------------------------------------------------------------------------------------------------------

Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	Таб = ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ПолучитьТекстЗапроса();
	
	Запрос.УстановитьПараметр("ЕстьГруппировкаПоПериодуРегистрации", Ложь);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация", Организация);
	 
	Если ОтборПодразделения.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("МассивПодразделений", ОтборПодразделения.ВыгрузитьКолонку("Подразделение"));
	КонецЕсли;	
	
	Если ОтборФизлица.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("МассивФизЛиц", ОтборФизлица.ВыгрузитьКолонку("ФизЛицо"));
	КонецЕсли;	
	
	СЗ_КолонкиГруппы = Новый СписокЗначений;	
	СЗ_КолонкиГруппы.Добавить("ГруппаНачальноеСальдо", "Начальное сальдо");
	СЗ_КолонкиГруппы.Добавить("ГруппаВсегоНачислено", "Всего начислено");
	СЗ_КолонкиГруппы.Добавить("ГруппаДоходыВНатуральнойФорме", "Доходы в натуральной форме");
	СЗ_КолонкиГруппы.Добавить("ГруппаВсегоУдержано", "Всего удержано");
	СЗ_КолонкиГруппы.Добавить("ГруппаВсегоВыплачено", "Всего выплачено");	
	СЗ_КолонкиГруппы.Добавить("ГруппаКонечноеСальдо", "Конечное сальдо");
	
	СЗ_КолонкиФиксированные = Новый СписокЗначений;
	СЗ_КолонкиФиксированные.Добавить("ФизЛицо", "Физлицо");
	СЗ_КолонкиФиксированные.Добавить("Подразделение", "Подразделение");
	СЗ_КолонкиФиксированные.Добавить("Должность", "Должность");
	
	СЗ_КолонкиСДнями = Новый СписокЗначений;
	СЗ_КолонкиСДнями.Добавить("ОтработаноДней", "Отработано дней");
	СЗ_КолонкиСДнями.Добавить("ОтработаноЧасов", "Отработано часов");
	
	СЗ_КолонкиССуммами = Новый СписокЗначений;	
	
	Соответствие_ВР_Группа = Новый Соответствие;
	
	// Подготовка структуры таблицы
	ТЗ = Новый ТаблицаЗначений;
	Для сч = 0 По СЗ_КолонкиФиксированные.Количество()-1 Цикл
		ИмяКолонки = СЗ_КолонкиФиксированные.Получить(сч).Значение;
		ПредставлениеКолонки = СЗ_КолонкиФиксированные.Получить(сч).Представление;
		
		ТЗ.Колонки.Добавить(ИмяКолонки, , ПредставлениеКолонки);
	КонецЦикла;
	
	Для сч = 0 По СЗ_КолонкиСДнями.Количество()-1 Цикл
		ИмяКолонки = СЗ_КолонкиСДнями.Получить(сч).Значение;
		ПредставлениеКолонки = СЗ_КолонкиСДнями.Получить(сч).Представление;
		
		ТЗ.Колонки.Добавить(ИмяКолонки, , ПредставлениеКолонки);		
	КонецЦикла;
	
	// подготавливаем структуру колонок таблицы
	РезультатЗапроса = Запрос.Выполнить();				
	ВыборкаФизЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Для сч = 0 По СЗ_КолонкиГруппы.Количество()-1 Цикл
		ВыборкаФизЛицо.Сбросить();
		ТекГруппаВР = СЗ_КолонкиГруппы[сч].Значение;		
		Пока ВыборкаФизЛицо.Следующий() Цикл
			
			ВыборкаГруппа = ВыборкаФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаГруппа.Следующий() Цикл		
				
				ГруппаВР = СокрЛП(ВыборкаГруппа.Группа);
				
				Если ГруппаВР <> ТекГруппаВР Тогда
					Продолжить;
				КонецЕсли;	
				
				ВыборкаВР = ВыборкаГруппа.Выбрать();
				Пока ВыборкаВР.Следующий() Цикл
					ВР = СокрЛП(ВыборкаВР.ИмяВидаРасчета);
					ИдентификаторКолонкиВР = ПреобразоватьВР_в_ИдентификаторКолонки(ВР);
					Если СЗ_КолонкиССуммами.НайтиПоЗначению(ИдентификаторКолонкиВР) = Неопределено Тогда
						ТЗ.Колонки.Добавить(ИдентификаторКолонкиВР, , ВР);
						СЗ_КолонкиССуммами.Добавить(ИдентификаторКолонкиВР, ВР);
					
						Соответствие_ВР_Группа.Вставить(ИдентификаторКолонкиВР, ГруппаВР);
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;	
			
		КонецЦикла;
		
		ИмяКолонки = СЗ_КолонкиГруппы.Получить(сч).Значение;
		ПредставлениеКолонки = СЗ_КолонкиГруппы.Получить(сч).Представление;
		
		ТЗ.Колонки.Добавить(ИмяКолонки, , ПредставлениеКолонки);
		СЗ_КолонкиССуммами.Добавить(ИмяКолонки, ПредставлениеКолонки);		
	КонецЦикла;
		
	КоличествоКолонокФиксированных = СЗ_КолонкиФиксированные.Количество();
	КоличествоКолонокГрупп = СЗ_КолонкиГруппы.Количество();
	КоличествоКолонокСДнями = СЗ_КолонкиСДнями.Количество();
	
	
	// обход результатов запроса	
	ВыборкаФизЛицо.Сбросить();
	Пока ВыборкаФизЛицо.Следующий() Цикл
		ФизЛицо = ВыборкаФизЛицо.ФизЛицо;
	
		ВыборкаГруппа = ВыборкаФизЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаГруппа.Следующий() Цикл		
			ГруппаВР = СокрЛП(ВыборкаГруппа.Группа);
			ВыборкаВР = ВыборкаГруппа.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаВР.Следующий() Цикл
				
				Выборка = ВыборкаВР.Выбрать();
				Если Выборка.Следующий() Тогда
					Подразделение = Выборка.Подразделение;
					Должность = Выборка.Должность;
				КонецЕсли;
				
				ВР = СокрЛП(ВыборкаВР.ИмяВидаРасчета);
				ИдентификаторКолонкиВР = ПреобразоватьВР_в_ИдентификаторКолонки(ВР);
								
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока.ФизЛицо = ФизЛицо;
				НоваяСтрока.Подразделение = Подразделение;
				НоваяСтрока.Должность = Должность;
				НоваяСтрока.ОтработаноДней = ВыборкаВР.ОтработаноДней;
				НоваяСтрока.ОтработаноЧасов = ВыборкаВР.ОтработаноЧасов;
				НоваяСтрока[ГруппаВР] = ВыборкаВР.Результат;
				НоваяСтрока[ИдентификаторКолонкиВР] = ВыборкаВР.Результат;
				//Сообщить("" + ФизЛицо + ": " + ИдентификаторКолонкиВР + "(" + ВР + ")= " + ВыборкаВР.Результат); 
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

	// Сворачиваем таблицу
	ФиксируемыеКолонки = "";
	Для сч = 0 По КоличествоКолонокФиксированных-1 Цикл
		ФиксируемыеКолонки = ФиксируемыеКолонки + "," + СЗ_КолонкиФиксированные.Получить(сч).Значение;
	КонецЦикла;
	Если СтрДлина(ФиксируемыеКолонки) > 0 Тогда 
		ФиксируемыеКолонки = Прав(ФиксируемыеКолонки, СтрДлина(ФиксируемыеКолонки)-1);
	КонецЕсли;
	
	СворачиваемыеКолонки = "";	
	Для сч = 0 По СЗ_КолонкиСДнями.Количество()-1 Цикл
		СворачиваемыеКолонки = СворачиваемыеКолонки + "," + СЗ_КолонкиСДнями.Получить(сч).Значение;
	КонецЦикла;
	Для сч = 0 По СЗ_КолонкиССуммами.Количество()-1 Цикл
		СворачиваемыеКолонки = СворачиваемыеКолонки + "," + СЗ_КолонкиССуммами.Получить(сч).Значение;
	КонецЦикла;
	Если СтрДлина(СворачиваемыеКолонки) > 0 Тогда 
		СворачиваемыеКолонки = Прав(СворачиваемыеКолонки, СтрДлина(СворачиваемыеКолонки)-1);
	КонецЕсли;
	
	
	
	ТЗ.Свернуть(ФиксируемыеКолонки, СворачиваемыеКолонки);
	ТЗ.Сортировать("ФизЛицо");
	
	ТЗИтоги = ТЗ.СкопироватьКолонки();
	ТЗИтогиПоСтранице = ТЗ.СкопироватьКолонки();	
	
	Макет = ПолучитьМакет("Макет");
	
	ОбластьШапкаОтчета = Макет.ПолучитьОбласть("ШапкаОтчета");
	ОбластьШапкаОтчета.Параметры.Организация = Организация.ПолноеНаименование();
	ОбластьШапкаОтчета.Параметры.ПериодСтр = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации);
	Таб.Вывести(ОбластьШапкаОтчета);
	
	// отборы
	Если (ОтборПодразделения.Количество() > 0) или (ОтборФизлица.Количество() > 0) Тогда
		ОбластьОтборы = Макет.ПолучитьОбласть("Отборы");
		
		Если ОтборПодразделения.Количество() = 0 Тогда
			ТекстОтборПодразделения = "Подразделения: по всем";
		Иначе	
			ТекстОтборПодразделения = "Подразделения: " + МассивВСтрокуСЗапятыми(ОтборПодразделения.ВыгрузитьКолонку("Подразделение"));
		КонецЕсли;
		
		Если ОтборФизлица.Количество() = 0 Тогда
			ТекстОтборФизЛица = "Сотрудники: по всем";
		Иначе	
			ТекстОтборФизЛица = "Сотрудники:        " + МассивВСтрокуСЗапятыми(ОтборФизлица.ВыгрузитьКолонку("ФизЛицо"));
		КонецЕсли;

		ОбластьОтборы.Параметры.ТекстОтборПодразделения = ТекстОтборПодразделения;
		ОбластьОтборы.Параметры.ТекстОтборФизЛица = ТекстОтборФизЛица;
		
		Таб.Вывести(ОбластьОтборы);
	КонецЕсли;	
	
	ВывестиШапкуТаблицы();
		
	// вывод строк	
	Ном = 0;
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Ном = Ном + 1;
		ВывестиСтроку(СтрокаТЗ, Ном);
	КонецЦикла;	
	
	// Итоги по странице
	ВывестиИтоги(Истина);
	
	// Итоги по отчету
	ВывестиИтоги(Ложь);
	
	// Подписи
    ВывестиОтветственныеЛица();
	
КонецПроцедуры
